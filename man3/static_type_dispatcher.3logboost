.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMP" 3 "" "" ""
.SH "NAME"
boost::log::static_type_dispatcher \- A static type dispatcher class\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/utility/type_dispatch/static_type_dispatcher\&.hpp>

template<typename T> 
class static_type_dispatcher {
public:
  // construct/copy/destruct
  template<typename ReceiverT> explicit static_type_dispatcher(ReceiverT &);
  static_type_dispatcher(static_type_dispatcher const &) = delete;
  static_type_dispatcher & operator=(static_type_dispatcher const &) = delete;
};
.fi
.SH "DESCRIPTION"
.PP
The type dispatcher can be used to pass objects of arbitrary types from one component to another\&. With regard to the library, the type dispatcher can be used to extract attribute values\&.
.PP
Static type dispatchers allow to specify one or several supported types at compile time\&.
.SS "static_type_dispatcher public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename ReceiverT> 
  explicit static_type_dispatcher(ReceiverT & receiver);
.fi

.sp
Constructor\&. Initializes the dispatcher internals\&.
.sp
The
\fIreceiver\fR
object is not copied inside the dispatcher, but references to it may be kept by the dispatcher after construction\&. The receiver object must remain valid until the dispatcher is destroyed\&.
.sp

.PP
Parameters:
.RS 4
.PP
receiver
.RS 4
Unary function object that will be called on a dispatched value\&. The receiver must be callable with an argument of any of the supported types of the dispatcher\&.
.RE
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
static_type_dispatcher(static_type_dispatcher const &) = delete;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
static_type_dispatcher & operator=(static_type_dispatcher const &) = delete;
.fi

.RE


