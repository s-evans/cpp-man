.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLAT" 3 "" "" ""
.SH "NAME"
boost::intrusive::key_of_value
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/intrusive/options\&.hpp>

template<typename KeyOfValue> 
struct key_of_value {
};
.fi
.SH "DESCRIPTION"
.PP
This option setter specifies the a function object that specifies the type of the key of an associative container and an operator to obtain it from a value type\&.
.PP
This function object must the define a
key_type
and a member with signature
const key_type & operator()(const value_type &) const
that will return the key from a value_type of an associative container

