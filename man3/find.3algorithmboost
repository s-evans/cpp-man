.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPLATE" 3 "" "" ""
.SH "NAME"
boost::algorithm::find \- Generic find algorithm\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/string/find\&.hpp>


template<typename RangeT, typename FinderT> 
  iterator_range< typename range_iterator< RangeT >::type > 
  find(RangeT & Input, const FinderT & Finder);
.fi
.SH "DESCRIPTION"
.PP
Search the input using the given finder\&.
.PP

.PP
Parameters:
.RS 4
.PP
Finder
.RS 4
Finder object used for searching\&.
.RE
.PP
Input
.RS 4
A string which will be searched\&.
.RE
.RE
.PP
Returns:
.RS 4
An
iterator_range
delimiting the match\&. Returned iterator is either
RangeT::iterator
or
RangeT::const_iterator, depending on the constness of the input parameter\&.
.RE

