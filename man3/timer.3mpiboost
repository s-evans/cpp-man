.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TIMER" 3 "" "" ""
.SH "NAME"
boost::mpi::timer \- A simple timer that provides access to the MPI timing facilities\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/mpi/timer\&.hpp>


class timer {
public:
  // construct/copy/destruct
  timer();

  // public member functions
  void restart();
  double elapsed() const;
  double elapsed_max() const;
  double elapsed_min() const;

  // public static functions
  static bool time_is_global();
};
.fi
.SH "DESCRIPTION"
.PP
The
timer
class is a simple wrapper around the MPI timing facilities that mimics the interface of the Boost Timer library\&.
.SS "timer public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
timer();
.fi

.sp
Initializes the timer
.sp

.PP
Postconditions:
.RS 4
elapsed()
== 0
.RE
.RE

.SS "timer public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
void restart();
.fi

.sp
Restart the timer\&.
.sp

.PP
Postconditions:
.RS 4
elapsed()
== 0
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
double elapsed() const;
.fi

.sp
Return the amount of time that has elapsed since the last construction or reset, in seconds\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
double elapsed_max() const;
.fi

.sp
Return an estimate of the maximum possible value of elapsed()\&. Note that this routine may return too high a value on some systems\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
double elapsed_min() const;
.fi

.sp
Returns the minimum non\-zero value that
elapsed()
may return\&. This is the resolution of the timer\&.
.RE

.SS "timer public static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static bool time_is_global();
.fi

.sp
Determines whether the elapsed time values are global times or local processor times\&.
.RE


