.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT EXCEPTION" 3 "" "" ""
.SH "NAME"
boost::log::sources::exception_handler \- Exception handler support feature\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/sources/exception_handler_feature\&.hpp>


struct exception_handler {
  // member classes/structs/unions
  template<typename BaseT> 
  struct apply {
    // types
    typedef basic_exception_handler_logger< BaseT > type;
  };
};
.fi
.SH "DESCRIPTION"
.PP
The logger with this feature will provide an additional method to install an exception handler functional object\&. This functional object will be called if during either opening or pushing a record an exception is thrown from the logging core\&.

