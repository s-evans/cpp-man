.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLA" 3 "" "" ""
.SH "NAME"
boost::interprocess::basic_bufferstream
.SH "SYNOPSIS"
.\" traits_type: Class template basic_bufferstream
.\" Class template basic_bufferstream: traits_type
.\" pos_type: Class template basic_bufferstream
.\" Class template basic_bufferstream: pos_type
.\" off_type: Class template basic_bufferstream
.\" Class template basic_bufferstream: off_type
.\" int_type: Class template basic_bufferstream
.\" Class template basic_bufferstream: int_type
.\" char_type: Class template basic_bufferstream
.\" Class template basic_bufferstream: char_type
.\" buffer: Class template basic_bufferstream
.\" Class template basic_bufferstream: buffer

.sp
.nf
// In header: <boost/interprocess/streams/bufferstream\&.hpp>

template<typename CharT, typename CharTraits> 
class basic_bufferstream : public std::basic_iostream< CharT, CharTraits > {
public:
  // types
  typedef std::basic_ios< CharT, CharTraits >::char_type       char_type;  
  typedef std::basic_ios< char_type, CharTraits >::int_type    int_type;   
  typedef std::basic_ios< char_type, CharTraits >::pos_type    pos_type;   
  typedef std::basic_ios< char_type, CharTraits >::off_type    off_type;   
  typedef std::basic_ios< char_type, CharTraits >::traits_type traits_type;

  // construct/copy/destruct
  basic_bufferstream(std::ios_base::openmode = std::ios_base::in|std::ios_base::out);
  basic_bufferstream(CharT *, std::size_t, 
                     std::ios_base::openmode = std::ios_base::in|std::ios_base::out);
  ~basic_bufferstream();

  // public member functions
  basic_bufferbuf< CharT, CharTraits > * rdbuf() const;
  std::pair< CharT *, std::size_t > buffer() const;
  void buffer(CharT *, std::size_t);
};
.fi
.SH "DESCRIPTION"
.PP
A basic_iostream class that uses a fixed size character buffer as its formatting buffer\&.
.SS "basic_bufferstream public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
basic_bufferstream(std::ios_base::openmode mode = std::ios_base::in|std::ios_base::out);
.fi

.sp
Constructor\&. Does not throw\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
basic_bufferstream(CharT * buf, std::size_t length, 
                   std::ios_base::openmode mode = std::ios_base::in|std::ios_base::out);
.fi

.sp
Constructor\&. Assigns formatting buffer\&. Does not throw\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
~basic_bufferstream();
.fi

.RE

.SS "basic_bufferstream public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
basic_bufferbuf< CharT, CharTraits > * rdbuf() const;
.fi

.sp
Returns the address of the stored stream buffer\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
.\" buffer: Class template basic_bufferstream
.\" Class template basic_bufferstream: buffer

.sp

.nf
std::pair< CharT *, std::size_t > buffer() const;
.fi

.sp
Returns the pointer and size of the internal buffer\&. Does not throw\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
.\" buffer: Class template basic_bufferstream
.\" Class template basic_bufferstream: buffer

.sp

.nf
void buffer(CharT * buf, std::size_t length);
.fi

.sp
Sets the underlying buffer to a new value\&. Resets stream position\&. Does not throw\&.
.RE


