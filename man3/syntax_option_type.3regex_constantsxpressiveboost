.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "TYPE SYNTAX_OPTIO" 3 "" "" ""
.SH "NAME"
boost::xpressive::regex_constants::syntax_option_type
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/xpressive/regex_constants\&.hpp>


enum syntax_option_type { ECMAScript = = 0, icase = = 1 << 1, 
                          nosubs = = 1 << 2, optimize = = 1 << 3, 
                          collate = = 1 << 4, single_line = = 1 << 10, 
                          not_dot_null = = 1 << 11, 
                          not_dot_newline = = 1 << 12, 
                          ignore_white_space = = 1 << 13 };
.fi
.SH "DESCRIPTION"
.PP
Flags used to customize the regex syntax
.PP
ECMAScript
.RS 4
Specifies that the grammar recognized by the regular expression engine uses its normal semantics: that is the same as that given in the ECMA\-262, ECMAScript Language Specification, Chapter 15 part 10, RegExp (Regular Expression) Objects (FWD\&.1)\&.
.RE
.PP
icase
.RS 4
Specifies that matching of regular expressions against a character container sequence shall be performed without regard to case\&.
.RE
.PP
nosubs
.RS 4
Specifies that when a regular expression is matched against a character container sequence, then no sub\-expression matches are to be stored in the supplied
match_results
structure\&.
.RE
.PP
optimize
.RS 4
Specifies that the regular expression engine should pay more attention to the speed with which regular expressions are matched, and less to the speed with which regular expression objects are constructed\&. Otherwise it has no detectable effect on the program output\&.
.RE
.PP
collate
.RS 4
Specifies that character ranges of the form "[a\-b]" should be locale sensitive\&.
.RE
.PP
single_line
.RS 4
Specifies that the ^ and $ metacharacters DO NOT match at internal line breaks\&. Note that this is the opposite of the perl default\&. It is the inverse of perl\'s /m (multi\-line) modifier\&.
.RE
.PP
not_dot_null
.RS 4
Specifies that the \&. metacharacter does not match the null character \e0\&.
.RE
.PP
not_dot_newline
.RS 4
Specifies that the \&. metacharacter does not match the newline character \en\&.
.RE
.PP
ignore_white_space
.RS 4
Specifies that non\-escaped white\-space is not significant\&.
.RE

