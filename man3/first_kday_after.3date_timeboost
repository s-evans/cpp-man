.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLAT" 3 "" "" ""
.SH "NAME"
boost::date_time::first_kday_after \- Calculate something like "First Sunday after Jan 1,2002\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/date_generators\&.hpp>

template<typename date_type> 
class first_kday_after {
public:
  // types
  typedef date_type::calendar_type        calendar_type;   
  typedef calendar_type::day_of_week_type day_of_week_type;
  typedef date_type::duration_type        duration_type;   

  // construct/copy/destruct
  first_kday_after(day_of_week_type);

  // public member functions
  date_type get_date(date_type) const;
  day_of_week_type day_of_week() const;
};
.fi
.SH "DESCRIPTION"
.PP
Date generator that takes a date and finds kday after

.sp
.if n \{\
.RS 4
.\}
.nf
typedef boost::date_time::first_kday_after<date> firstkdayafter;
firstkdayafter fkaf(Monday);
fkaf\&.get_date(date(2002,Feb,1));

.fi
.if n \{\
.RE
.\}
.sp

.SS "first_kday_after public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
first_kday_after(day_of_week_type dow);
.fi

.RE

.SS "first_kday_after public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
date_type get_date(date_type start_day) const;
.fi

Return next kday given\&. .RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
day_of_week_type day_of_week() const;
.fi

.RE


