.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TE" 3 "" "" ""
.SH "NAME"
boost::accumulators::impl::coherent_tail_mean_impl \- Estimation of the coherent tail mean based on order statistics (for both left and right tails)
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/accumulators/statistics_fwd\&.hpp>

template<typename Sample, typename LeftRight> 
struct coherent_tail_mean_impl : public accumulator_base {
  // construct/copy/destruct
  coherent_tail_mean_impl(dont_care);

  // public member functions
  template<typename Args> result_type result(Args const &) const;
};
.fi
.SH "DESCRIPTION"
.PP
The coherent tail mean
\&\s-2\u[1]\d\s+2[IMAGE]\&\s-2\u[2]\d\s+2 [$\widehat{CTM}_{n,\alpha}(X)$]
is equal to the non\-coherent tail mean
\&\s-2\u[3]\d\s+2[IMAGE]\&\s-2\u[4]\d\s+2 [$\widehat{NCTM}_{n,\alpha}(X)$]
plus a correction term that ensures coherence in case of non\-continuous distributions\&.
.PP
\fBEquation 1.15. \fR \&\s-2\u[5]\d\s+2.sp .RS 4 [IMAGE]\&\s-2\u[6]\d\s+2 \e[ \ewidehat{CTM}_{n,\ealpha}^{\emathrm{right}}(X) = \ewidehat{NCTM}_{n,\ealpha}^{\emathrm{right}}(X) + \efrac{1}{\elceil n(1\-\ealpha)\erceil}\ehat{q}_{n,\ealpha}(X)\eleft(1 \- \ealpha \- \efrac{1}{n}\elceil n(1\-\ealpha)\erceil \eright) \e] .RE
.PP
\fBEquation 1.16. \fR \&\s-2\u[7]\d\s+2.sp .RS 4 [IMAGE]\&\s-2\u[8]\d\s+2 \e[ \ewidehat{CTM}_{n,\ealpha}^{\emathrm{left}}(X) = \ewidehat{NCTM}_{n,\ealpha}^{\emathrm{left}}(X) + \efrac{1}{\elceil n\ealpha\erceil}\ehat{q}_{n,\ealpha}(X)\eleft(\ealpha \- \efrac{1}{n}\elceil n\ealpha\erceil \eright) \e] .RE
.SS "coherent_tail_mean_impl public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
coherent_tail_mean_impl(dont_care);
.fi

.RE

.SS "coherent_tail_mean_impl public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename Args> result_type result(Args const & args) const;
.fi

.RE


