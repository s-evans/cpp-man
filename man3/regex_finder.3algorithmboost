.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMP" 3 "" "" ""
.SH "NAME"
boost::algorithm::regex_finder \- "Regex" finder
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/string/regex_find_format\&.hpp>


template<typename CharT, typename RegexTraitsT> 
  \fIunspecified\fR regex_finder(const basic_regex< CharT, RegexTraitsT > & Rx, 
                           match_flag_type MatchFlags = match_default);
.fi
.SH "DESCRIPTION"
.PP
Construct the
regex_finder\&. Finder uses the regex engine to search for a match\&. Result is given in
regex_search_result\&. This is an extension of the iterator_range\&. In addition it contains match results from the
regex_search
algorithm\&.
.PP

.PP
Parameters:
.RS 4
.PP
MatchFlags
.RS 4
Regex search options
.RE
.PP
Rx
.RS 4
A regular expression
.RE
.RE
.PP
Returns:
.RS 4
An instance of the
regex_finder
object
.RE

