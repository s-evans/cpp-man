.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE C" 3 "" "" ""
.SH "NAME"
boost::proto::result_of::child_c \- A metafunction that returns the type of the \fIN\fRth child of a Proto expression\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/traits\&.hpp>

template<typename Expr, long N> 
struct child_c {
  // types
  typedef typename Expr::proto_child0 value_type;
  typedef \fIsee\fR\fI\-\fR\fIbelow\fR                   type;      
};
.fi
.SH "DESCRIPTION"
.PP
A metafunction that returns the type of the
\fIN\fRth
child of a Proto expression\&.
N
must be 0 or less than
Expr::proto_arity::value\&.
.SS "child_c public types"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

typedef
typename
Expr::proto_child0
value_type;
.sp
The raw type of the
\fIN\fRth
child as it is stored within
Expr\&. This may be a value or a reference\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

typedef
\fIsee\fR\fI\-\fR\fIbelow\fR
type;
.sp
If
Expr
is not a reference type,
type
is computed as follows:

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

T const &
becomes
T
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

T &
becomes
T
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

T
becomes
T
.RE
.RS 4

.sp
If
Expr
is a non\-const reference type,
type
is computed as follows:

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

T const &
becomes
T const &
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

T &
becomes
T &
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

T
becomes
T &
.RE
.RS 4

.sp
If
Expr
is a const reference type,
type
is computed as follows:

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

T const &
becomes
T const &
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

T &
becomes
T &
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

T
becomes
T const &
.RE
.RS 4

.RE


