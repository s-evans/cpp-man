.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS SCOPED_FLAG" 3 "" "" ""
.SH "NAME"
boost::log::sinks::asynchronous_sink::scoped_flag \- A scope guard that resets a flag on destructor\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/sinks/async_frontend\&.hpp>



// A scope guard that resets a flag on destructor\&.

class scoped_flag {
public:
  // construct/copy/destruct
  explicit scoped_flag(frontend_mutex_type &, condition_variable_any &, 
                       volatile bool &);
  scoped_flag(scoped_flag const &);
  scoped_flag & operator=(scoped_flag const &);
  ~scoped_flag();
};
.fi
.SH "DESCRIPTION"
.SS "scoped_flag public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
explicit scoped_flag(frontend_mutex_type & mut, condition_variable_any & cond, 
                     volatile bool & f);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
scoped_flag(scoped_flag const &);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
scoped_flag & operator=(scoped_flag const &);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
~scoped_flag();
.fi

.RE


