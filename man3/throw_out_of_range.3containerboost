.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION THROW_" 3 "" "" ""
.SH "NAME"
boost::container::throw_out_of_range
.SH "SYNOPSIS"
.\" throw_out_of_range: Function throw_out_of_range
.\" Function throw_out_of_range: throw_out_of_range

.sp
.nf
// In header: <boost/container/throw_exception\&.hpp>


void throw_out_of_range(const char * str);
.fi
.SH "DESCRIPTION"
.PP
Exception callback called by Boost\&.Container to signal arguments out of range\&.

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If BOOST_NO_EXCEPTIONS is NOT defined
std::out_of_range(str)
is thrown\&.
.sp

.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If BOOST_NO_EXCEPTIONS is defined and BOOST_CONTAINER_USER_DEFINED_THROW_CALLBACKS is NOT defined
BOOST_ASSERT_MSG(!"boost::container out_of_range thrown", str)
is called and
std::abort()
if the former returns\&.
.sp

.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If BOOST_NO_EXCEPTIONS and BOOST_CONTAINER_USER_DEFINED_THROW_CALLBACKS are defined the user must provide an implementation and the function should not return\&.
.RE
.sp
.RE


