.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPL" 3 "" "" ""
.SH "NAME"
boost::units::derived_dimension \- A utility class for defining composite dimensions with integer powers\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/units/derived_dimension\&.hpp>

template<typename DT1 = dimensionless_type, long E1 = 0, 
         typename DT2 = dimensionless_type, long E2 = 0, 
         typename DT3 = dimensionless_type, long E3 = 0, 
         typename DT4 = dimensionless_type, long E4 = 0, 
         typename DT5 = dimensionless_type, long E5 = 0, 
         typename DT6 = dimensionless_type, long E6 = 0, 
         typename DT7 = dimensionless_type, long E7 = 0, 
         typename DT8 = dimensionless_type, long E8 = 0> 
struct derived_dimension {
  // types
  typedef \fIunspecified\fR type;
};
.fi

