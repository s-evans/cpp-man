.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT MARK_TAG" 3 "" "" ""
.SH "NAME"
boost::xpressive::mark_tag \- Sub\-match placeholder type, used to create named captures in static regexes\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/xpressive/regex_primitives\&.hpp>


struct mark_tag {
  // construct/copy/destruct
  mark_tag(int);

  // private static functions
  static \fIunspecified\fR make_tag(int);
};
.fi
.SH "DESCRIPTION"
.PP
mark_tag
is the type of the global sub\-match placeholders
s0,
s1, etc\&.\&. You can use the
mark_tag
type to create your own sub\-match placeholders with more meaningful names\&. This is roughly equivalent to the "named capture" feature of dynamic regular expressions\&.
.PP
To create a named sub\-match placeholder, initialize it with a unique integer\&. The integer must only be unique within the regex in which the placeholder is used\&. Then you can use it within static regexes to created sub\-matches by assigning a sub\-expression to it, or to refer back to already created sub\-matches\&.
.PP

.sp
.if n \{\
.RS 4
.\}
.nf
mark_tag number(1); // "number" is now equivalent to "s1"
// Match a number, followed by a space and the same number again
sregex rx = (number = +_d) >> \' \' >> number;

.fi
.if n \{\
.RE
.\}

.PP
After a successful
regex_match()
or
regex_search(), the sub\-match placeholder can be used to index into the
match_results<>
object to retrieve the corresponding sub\-match\&.
.SS "mark_tag public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
mark_tag(int mark_nbr);
.fi

Initialize a mark_tag placeholder\&. 
.PP
Parameters:
.RS 4
.PP
mark_nbr
.RS 4
An integer that uniquely identifies this
mark_tag
within the static regexes in which this
mark_tag
will be used\&.
.RE
.RE
.PP
Requires:
.RS 4
mark_nbr > 0
.RE
.RE

.SS "mark_tag private static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static \fIunspecified\fR make_tag(int mark_nbr);
.fi

.RE


