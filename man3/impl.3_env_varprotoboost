.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE IM" 3 "" "" ""
.SH "NAME"
boost::proto::_env_var::impl
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/transform/env\&.hpp>



struct impl :  proto::transform_impl<Expr, State, Data> > {
  // types
  typedef typename proto::result_of::env_var<Data, Key>::type result_type;

  // public member functions
  result_type operator()(typename impl::expr_param, 
                         typename impl::state_param, 
                         typename impl::data_param) const;
};
.fi
.SH "DESCRIPTION"
.SS "impl public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
result_type operator()(typename impl::expr_param, typename impl::state_param, 
                       typename impl::data_param data) const;
.fi

.sp
Fetches the value associated with
Key
from the transform environment passed in the data (third) parameter\&.
.PP
Parameters:
.RS 4
.PP
data
.RS 4
The current transform environment
.RE
.RE
.PP
Requires:
.RS 4

proto::is_env<Data>::value
is
true\&.
.RE
.PP
Returns:
.RS 4

proto::env_var(data)
.RE
.RE


