.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPL" 3 "" "" ""
.SH "NAME"
boost::operator<< \- Provides streaming output for variant types\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/variant/variant\&.hpp>


template<typename ElemType, typename Traits, typename T1, typename T2, \&.\&.\&., 
         typename TN> 
  std::basic_ostream<ElemType,Traits> & 
  operator<<(std::basic_ostream<ElemType,Traits> & out, 
             const variant<T1, T2, \&.\&.\&., TN> & rhs);
.fi
.SH "DESCRIPTION"
.PP
Requires:
.RS 4
Every bounded type of the
variant
must fulfill the requirements of the
\fIOutputStreamable\fR
concept\&.
.RE
.PP
Effects:
.RS 4
Calls
out << x, where
x
is the content of
rhs\&.
.RE
.PP
Notes:
.RS 4
Not available when
BOOST_NO_IOSTREAM
is defined\&.
.RE

