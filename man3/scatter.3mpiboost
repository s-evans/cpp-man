.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION SCATTER" 3 "" "" ""
.SH "NAME"
boost::mpi::scatter \- Scatter the values stored at the root to all processes within the communicator\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/mpi/collectives\&.hpp>


template<typename T> 
  void scatter(const communicator & comm, const std::vector< T > & in_values, 
               T & out_value, int root);
template<typename T> 
  void scatter(const communicator & comm, const T * in_values, T & out_value, 
               int root);
template<typename T> 
  void scatter(const communicator & comm, T & out_value, int root);
template<typename T> 
  void scatter(const communicator & comm, const std::vector< T > & in_values, 
               T * out_values, int n, int root);
template<typename T> 
  void scatter(const communicator & comm, const T * in_values, T * out_values, 
               int n, int root);
template<typename T> 
  void scatter(const communicator & comm, T * out_values, int n, int root);
.fi
.SH "DESCRIPTION"
.PP
scatter
is a collective algorithm that scatters the values stored in the
root
process (inside a vector) to all of the processes in the communicator\&. The vector
out_values
(only significant at the
root) is indexed by the process number to which the corresponding value will be sent\&. The type
T
of the values may be any type that is serializable or has an associated MPI data type\&.
.PP
When the type
T
has an associated MPI data type, this routine invokes
MPI_Scatter
to scatter the values\&.
.PP

.PP
Parameters:
.RS 4
.PP
comm
.RS 4
The communicator over which the scatter will occur\&.
.RE
.PP
in_values
.RS 4
A vector or pointer to storage that will contain the values to send to each process, indexed by the process rank\&. For non\-root processes, this parameter may be omitted\&. If it is still provided, however, it will be unchanged\&.
.RE
.PP
out_value
.RS 4
The value received by each process\&. When scattering an array of values,
out_values
points to the
n
values that will be received by each process\&.
.RE
.PP
root
.RS 4
The process ID number that will scatter the values\&. This value must be the same on all processes\&.
.RE
.RE

