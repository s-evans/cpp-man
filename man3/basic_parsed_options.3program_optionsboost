.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPL" 3 "" "" ""
.SH "NAME"
boost::program_options::basic_parsed_options
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/program_options/variables_map\&.hpp>

template<typename charT> 
class basic_parsed_options {
public:
  // construct/copy/destruct
  explicit basic_parsed_options(const options_description *, int = 0);
};
.fi
.SH "DESCRIPTION"
.PP
Results of parsing an input source\&. The primary use of this class is passing information from parsers component to value storage component\&. This class does not makes much sense itself\&.
.SS "basic_parsed_options public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
explicit basic_parsed_options(const options_description * xdescription, 
                              int options_prefix = 0);
.fi

.RE


