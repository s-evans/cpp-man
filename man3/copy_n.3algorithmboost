.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPLAT" 3 "" "" ""
.SH "NAME"
boost::algorithm::copy_n \- Copies exactly n (n > 0) elements from the range starting at first to the range starting at result\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/cxx11/copy_n\&.hpp>


template<typename InputIterator, typename Size, typename OutputIterator> 
  OutputIterator copy_n(InputIterator first, Size n, OutputIterator result);
.fi
.SH "DESCRIPTION"
.PP

.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
This function is part of the C++2011 standard library\&. We will use the standard one if it is available, otherwise we have our own implementation\&.
.sp .5v
.RE

.PP
Parameters:
.RS 4
.PP
first
.RS 4
The start of the input sequence
.RE
.PP
n
.RS 4
The number of elements to copy
.RE
.PP
result
.RS 4
An output iterator to write the results into
.RE
.RE
.PP
Returns:
.RS 4
The updated output iterator
.RE

