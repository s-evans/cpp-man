.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS PACKED_" 3 "" "" ""
.SH "NAME"
boost::mpi::packed_skeleton_oarchive \- An archiver that records the binary skeleton of a data structure into a buffer\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/mpi/skeleton_and_content\&.hpp>


class packed_skeleton_oarchive : public ignore_oprimitive {
public:
  // construct/copy/destruct
  packed_skeleton_oarchive(MPI_Comm const &, 
                           unsigned int = boost::archive::no_header);
  explicit packed_skeleton_oarchive(packed_oarchive &);

  // public member functions
  const packed_oarchive & get_skeleton() const;
};
.fi
.SH "DESCRIPTION"
.PP
The
packed_skeleton_oarchive
class is an Archiver (as in the Boost\&.Serialization library) that can record the shape of a data structure (called the "skeleton") into a binary representation stored in a buffer\&. The
packed_skeleton_oarchive
is typically used by the send of a skeleton, to pack the skeleton of a data structure for transmission separately from the content\&.
.PP
Users will not generally need to use
packed_skeleton_oarchive
directly\&. Instead, use
skeleton
or
get_skeleton\&.
.SS "packed_skeleton_oarchive public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
packed_skeleton_oarchive(MPI_Comm const & comm, 
                         unsigned int flags = boost::archive::no_header);
.fi

.sp
Construct a
packed_skeleton_oarchive
for the given communicator\&.
.sp

.PP
Parameters:
.RS 4
.PP
comm
.RS 4
The communicator over which this archive will be transmitted\&.
.RE
.PP
flags
.RS 4
Control the serialization of the skeleton\&. Refer to the Boost\&.Serialization documentation before changing the default flags\&.
.RE
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
explicit packed_skeleton_oarchive(packed_oarchive & archive);
.fi

.sp
Construct a
packed_skeleton_oarchive
that packs a skeleton into the given
archive\&.
.sp

.PP
Parameters:
.RS 4
.PP
archive
.RS 4
the archive to which the skeleton will be packed\&.
.RE
.RE
.RE

.SS "packed_skeleton_oarchive public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
const packed_oarchive & get_skeleton() const;
.fi

.sp
Retrieve the archive corresponding to this skeleton\&.
.RE


