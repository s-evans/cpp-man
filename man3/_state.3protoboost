.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT _STATE" 3 "" "" ""
.SH "NAME"
boost::proto::_state \- A PrimitiveTransform that returns the current state unmodified\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/transform/arg\&.hpp>


struct _state :  proto::transform< _state > {
  // member classes/structs/unions
  template<typename Expr, typename State, typename Data> 
  struct impl :  proto::transform_impl< Expr, State, Data > {
    // types
    typedef State result_type;

    // public member functions
    State operator()(typename impl::expr_param, typename impl::state_param, 
                     typename impl::data_param) const;
  };
};
.fi
.SH "DESCRIPTION"
.PP
Example:

.sp
.if n \{\
.RS 4
.\}
.nf
proto::terminal<int>::type i = {42};
char ch = proto::_state()(i, \'a\');
assert( ch == \'a\' );
.fi
.if n \{\
.RE
.\}
.sp


