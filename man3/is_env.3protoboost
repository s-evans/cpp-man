.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE I" 3 "" "" ""
.SH "NAME"
boost::proto::is_env \- A Boolean metafuntion for determining whether or not a type is a Proto transform environment\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/transform/env\&.hpp>

template<typename T> 
struct is_env :  mpl::bool_<\fItrue\-or\-false\fR> {
};
.fi
.SH "DESCRIPTION"
.PP
is_env<T>
inherits from
mpl::true_
under the following conditions:

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If T is proto::empty_env\&..RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If T is a specialization of proto::env<>\&..RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If T is derived from any of the above\&..RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If T is a cv\-qualified variant of any of the above\&..RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If T is a reference to any of the above\&..RE
.sp
.RE

.PP
Otherwise,
is_env<T>
inherits from
mpl::false_\&.

