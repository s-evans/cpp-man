.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT T" 3 "" "" ""
.SH "NAME"
boost::xpressive::regex_id_filter_predicate
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/xpressive/match_results\&.hpp>

template<typename BidiIter> 
struct regex_id_filter_predicate :
  public std::unary_function< match_results< BidiIter >, bool >
{
  // construct/copy/destruct
  regex_id_filter_predicate(regex_id_type);

  // public member functions
  bool operator()(match_results< BidiIter > const &) const;
};
.fi
.SH "DESCRIPTION"
.SS "regex_id_filter_predicate public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
regex_id_filter_predicate(regex_id_type regex_id);
.fi

.RE

.SS "regex_id_filter_predicate public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
bool operator()(match_results< BidiIter > const & res) const;
.fi

.RE


