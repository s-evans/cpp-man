.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT SIMPLE_TIM" 3 "" "" ""
.SH "NAME"
boost::posix_time::simple_time_rep \- Simple implementation for the time rep\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/posix_time/posix_time_config\&.hpp>


struct simple_time_rep {
  // types
  typedef gregorian::date date_type;         
  typedef time_duration   time_duration_type;

  // construct/copy/destruct
  simple_time_rep(date_type, time_duration_type);

  // public member functions
  bool is_special() const;
  bool is_pos_infinity() const;
  bool is_neg_infinity() const;
  bool is_not_a_date_time() const;

  // public data members
  date_type day;
  time_duration_type time_of_day;
};
.fi
.SH "DESCRIPTION"
.SS "simple_time_rep public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
simple_time_rep(date_type d, time_duration_type tod);
.fi

.RE

.SS "simple_time_rep public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
bool is_special() const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
bool is_pos_infinity() const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
bool is_neg_infinity() const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
bool is_not_a_date_time() const;
.fi

.RE


