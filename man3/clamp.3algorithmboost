.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPLATE" 3 "" "" ""
.SH "NAME"
boost::algorithm::clamp
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/clamp\&.hpp>


template<typename T> 
  T const & clamp(const T & val, 
                  typename boost::mpl::identity< T >::type const & lo, 
                  typename boost::mpl::identity< T >::type const & hi);
.fi
.SH "DESCRIPTION"
.PP

.PP
Parameters:
.RS 4
.PP
hi
.RS 4
The upper bound of the range to be clamped to
.RE
.PP
lo
.RS 4
The lower bound of the range to be clamped to
.RE
.PP
val
.RS 4
The value to be clamped
.RE
.RE
.PP
Returns:
.RS 4
the value "val" brought into the range [ lo, hi ]\&. If the value is less than lo, return lo\&. If the value is greater than "hi", return hi\&. Otherwise, return the original value\&.
.RE

