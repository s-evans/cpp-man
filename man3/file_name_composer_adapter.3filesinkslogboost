.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TE" 3 "" "" ""
.SH "NAME"
boost::log::sinks::file::file_name_composer_adapter
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/sinks/text_multifile_backend\&.hpp>

template<typename FormatterT> 
class file_name_composer_adapter {
public:
  // types
  typedef filesystem::path                             result_type;       // Functor result type\&. 
  typedef result_type::string_type::value_type         native_char_type;  // File name character type\&. 
  typedef FormatterT                                   formatter_type;    // The adopted formatter type\&. 
  typedef basic_formatting_ostream< native_char_type > stream_type;       // Formatting stream type\&. 

  // construct/copy/destruct
  explicit file_name_composer_adapter(formatter_type const &, 
                                      std::locale const & = std::locale());
  file_name_composer_adapter(file_name_composer_adapter const &);
  file_name_composer_adapter & operator=(file_name_composer_adapter const &);

  // public member functions
  result_type operator()(record_view const &) const;
};
.fi
.SH "DESCRIPTION"
.PP
An adapter class that allows to use regular formatters as file name generators\&.
.SS "file_name_composer_adapter public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
explicit file_name_composer_adapter(formatter_type const & formatter, 
                                    std::locale const & loc = std::locale());
.fi

.sp
Initializing constructor
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
file_name_composer_adapter(file_name_composer_adapter const & that);
.fi

.sp
Copy constructor
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
file_name_composer_adapter & 
operator=(file_name_composer_adapter const & that);
.fi

.sp
Assignment
.RE

.SS "file_name_composer_adapter public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
result_type operator()(record_view const & rec) const;
.fi

.sp
The operator generates a file name based on the log record
.RE


