.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLA" 3 "" "" ""
.SH "NAME"
boost::date_time::all_date_names_put \- A date name output facet that takes an array of char* to define strings\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/date_names_put\&.hpp>

template<typename Config, typename charT = char, 
         typename OutputIterator = std::ostreambuf_iterator<charT> > 
class all_date_names_put :
  public boost::date_time::date_names_put< Config, charT, OutputIterator >
{
public:
  // types
  typedef OutputIterator             iter_type;         
  typedef Config::month_enum         month_enum;        
  typedef Config::weekday_enum       weekday_enum;      
  typedef Config::special_value_enum special_value_enum;

  // construct/copy/destruct
  all_date_names_put(const charT *const, const charT *const, 
                     const charT *const, const charT *const, 
                     const charT *const, charT = \'\-\', 
                     ymd_order_spec = ymd_order_iso, 
                     month_format_spec = month_as_short_string);

  // public member functions
  const charT *const * get_short_month_names() const;
  const charT *const * get_long_month_names() const;
  const charT *const * get_special_value_names() const;
  const charT *const * get_short_weekday_names() const;
  const charT *const * get_long_weekday_names() const;

  // protected member functions
  virtual void do_put_month_short(iter_type &, month_enum) const;
  virtual void do_put_month_long(iter_type &, month_enum) const;
  virtual void do_put_special_value(iter_type &, special_value_enum) const;
  virtual void do_put_weekday_short(iter_type &, weekday_enum) const;
  virtual void do_put_weekday_long(iter_type &, weekday_enum) const;
  virtual void do_month_sep_char(iter_type &) const;
  virtual void do_day_sep_char(iter_type &) const;
  virtual ymd_order_spec do_date_order() const;
  virtual month_format_spec do_month_format() const;
};
.fi
.SH "DESCRIPTION"
.SS "all_date_names_put public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
all_date_names_put(const charT *const month_short_names, 
                   const charT *const month_long_names, 
                   const charT *const special_value_names, 
                   const charT *const weekday_short_names, 
                   const charT *const weekday_long_names, 
                   charT separator_char = \'\-\', 
                   ymd_order_spec order_spec = ymd_order_iso, 
                   month_format_spec month_format = month_as_short_string);
.fi

.RE

.SS "all_date_names_put public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
const charT *const * get_short_month_names() const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
const charT *const * get_long_month_names() const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
const charT *const * get_special_value_names() const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
const charT *const * get_short_weekday_names() const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}

.sp

.nf
const charT *const * get_long_weekday_names() const;
.fi

.RE

.SS "all_date_names_put protected member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
virtual void do_put_month_short(iter_type & oitr, month_enum moy) const;
.fi

Generic facet that takes array of chars\&. .RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
virtual void do_put_month_long(iter_type & oitr, month_enum moy) const;
.fi

Long month names\&. .RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
virtual void 
do_put_special_value(iter_type & oitr, special_value_enum sv) const;
.fi

Special values names\&. .RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
virtual void do_put_weekday_short(iter_type & oitr, weekday_enum wd) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}

.sp

.nf
virtual void do_put_weekday_long(iter_type & oitr, weekday_enum wd) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}

.sp

.nf
virtual void do_month_sep_char(iter_type & oitr) const;
.fi

char between year\-month .RE


.sp
.RS 4
.ie n \{\
\h'-04' 7.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  7." 4.2
.\}

.sp

.nf
virtual void do_day_sep_char(iter_type & oitr) const;
.fi

Char to separate month\-day\&. .RE


.sp
.RS 4
.ie n \{\
\h'-04' 8.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  8." 4.2
.\}

.sp

.nf
virtual ymd_order_spec do_date_order() const;
.fi

Set the date ordering\&. .RE


.sp
.RS 4
.ie n \{\
\h'-04' 9.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  9." 4.2
.\}

.sp

.nf
virtual month_format_spec do_month_format() const;
.fi

Set the date ordering\&. .RE


