.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE " 3 "" "" ""
.SH "NAME"
boost::type_erasure::iterator
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/type_erasure/iterator\&.hpp>

template<typename Traversal, typename T = _self, 
         typename Reference = boost::use_default, 
         typename DifferenceType = std::ptrdiff_t> 
struct iterator {
  // types
  typedef \fIunspecified\fR    value_type;     
  typedef Reference      reference;      
  typedef DifferenceType difference_type;
};
.fi
.SH "DESCRIPTION"
.PP
The
iterator
concept can be used for any iterator category\&.
.PP
The value_type of the iterator is deduced\&. To force it to be a specific type, use the
same_type
concept\&.
.PP
Example:
.PP

.sp
.if n \{\
.RS 4
.\}
.nf
mpl::vector<
  iterator<boost::forward_traversal_tag>,
  same_type<iterator<boost::forward_traversal_tag>::value_type, int> > int_it;

.fi
.if n \{\
.RE
.\}
.sp

.SS "Template Parameters"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
typename Traversal
.fi

.sp
must be one of boost::incrementable_traversal_tag, boost::single_pass_traversal_tag, boost::forward_traversal_tag, boost::bidirectional_traversal_tag, and boost::random_access_traversal_tag\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
typename T = _self
.fi

.sp
The placeholder representing the iterator\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
typename Reference = boost::use_default
.fi

.sp
The reference type\&. If it is boost::use_default, then reference will be value_type&\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
typename DifferenceType = std::ptrdiff_t
.fi

.sp
The iterator\'s difference type\&.
.RE


