.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPL" 3 "" "" ""
.SH "NAME"
boost::algorithm::find_format \- Generic replace algorithm\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/string/find_format\&.hpp>


template<typename SequenceT, typename FinderT, typename FormatterT> 
  void find_format(SequenceT & Input, FinderT Finder, FormatterT Formatter);
.fi
.SH "DESCRIPTION"
.PP
Use the Finder to search for a substring\&. Use the Formatter to format this substring and replace it in the input\&. The input is modified in\-place\&.
.PP

.PP
Parameters:
.RS 4
.PP
Finder
.RS 4
A Finder object used to search for a match to be replaced
.RE
.PP
Formatter
.RS 4
A Formatter object used to format a match
.RE
.PP
Input
.RS 4
An input sequence
.RE
.RE

