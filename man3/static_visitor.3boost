.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLATE" 3 "" "" ""
.SH "NAME"
boost::static_visitor \- Convenient base type for static visitors\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/variant/static_visitor\&.hpp>

template<typename ResultType> 
class static_visitor {
public:
  // types
  typedef ResultType result_type;  // Exposes result_type member as required by StaticVisitor concept\&.
};
.fi
.SH "DESCRIPTION"
.sp
Denotes the intent of the deriving class as meeting the requirements of a static visitor of some type\&. Also exposes the inner type result_type as required by the \fIStaticVisitor\fR concept\&.
.sp
\fBNotes\fR: static_visitor is intended for use as a base type only and is therefore noninstantiable\&.

