.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMP" 3 "" "" ""
.SH "NAME"
boost::accumulators::impl::pot_tail_mean_impl \- Estimation of the (coherent) tail mean based on the peaks over threshold method (for both left and right tails)
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/accumulators/statistics_fwd\&.hpp>

template<typename Sample, typename Impl, typename LeftRight> 
struct pot_tail_mean_impl : public accumulator_base {
  // construct/copy/destruct
  pot_tail_mean_impl(dont_care);

  // public member functions
  template<typename Args> result_type result(Args const &) const;
};
.fi
.SH "DESCRIPTION"
.PP
Computes an estimate for the (coherent) tail mean
\fBEquation 1.29. \fR \&\s-2\u[1]\d\s+2.sp .RS 4 [IMAGE]\&\s-2\u[2]\d\s+2 \e[ \ewidehat{CTM}_{\ealpha} = \ehat{q}_{\ealpha} \- \efrac{\ebar{\ebeta}}{\exi\-1}(1\-\ealpha)^{\-\exi}, \e] .RE
where
\&\s-2\u[3]\d\s+2[IMAGE]\&\s-2\u[4]\d\s+2 [$\bar[u]$],
\&\s-2\u[5]\d\s+2[IMAGE]\&\s-2\u[6]\d\s+2 [$\bar{\beta}$]
and
\&\s-2\u[7]\d\s+2[IMAGE]\&\s-2\u[8]\d\s+2 [$\xi$]
are the parameters of the generalized Pareto distribution that approximates the right tail of the distribution (or the mirrored left tail, in case the left tail is used)\&. In the latter case, the result is mirrored back, yielding the correct result\&.
.SS "pot_tail_mean_impl public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
pot_tail_mean_impl(dont_care);
.fi

.RE

.SS "pot_tail_mean_impl public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename Args> result_type result(Args const & args) const;
.fi

.RE


