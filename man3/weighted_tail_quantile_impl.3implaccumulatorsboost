.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT " 3 "" "" ""
.SH "NAME"
boost::accumulators::impl::weighted_tail_quantile_impl \- Tail quantile estimation based on order statistics of weighted samples (for both left and right tails)
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/accumulators/statistics_fwd\&.hpp>

template<typename Sample, typename Weight, typename LeftRight> 
struct weighted_tail_quantile_impl : public accumulator_base {
  // construct/copy/destruct
  weighted_tail_quantile_impl(dont_care);

  // public member functions
  template<typename Args> result_type result(Args const &) const;
};
.fi
.SH "DESCRIPTION"
.PP
An estimator
\&\s-2\u[1]\d\s+2[IMAGE]\&\s-2\u[2]\d\s+2 [$\hat{q}$]
of tail quantiles with level
\&\s-2\u[3]\d\s+2[IMAGE]\&\s-2\u[4]\d\s+2 [$\alpha$]
based on order statistics
\&\s-2\u[5]\d\s+2[IMAGE]\&\s-2\u[6]\d\s+2 [$X_{1:n} \leq X_{2:n} \leq\dots\leq X_{n:n}$]
of weighted samples are given by
\&\s-2\u[7]\d\s+2[IMAGE]\&\s-2\u[8]\d\s+2 [$X_{\lambda:n}$]
(left tail) and
\&\s-2\u[9]\d\s+2[IMAGE]\&\s-2\u[10]\d\s+2 [$X_{\rho:n}$]
(right tail), where
.PP
\fBEquation 1.43. \fR \&\s-2\u[11]\d\s+2.sp .RS 4 [IMAGE]\&\s-2\u[12]\d\s+2 \e[ \elambda = \einf\eleft\e{ l \eleft| \efrac{1}{\ebar{w}_n}\esum_{i=1}^{l} w_i \egeq \ealpha \eright\&. \eright\e} \e] .RE
.PP
and
.PP
\fBEquation 1.44. \fR \&\s-2\u[13]\d\s+2.sp .RS 4 [IMAGE]\&\s-2\u[14]\d\s+2 \e[ \erho = \esup\eleft\e{ r \eleft| \efrac{1}{\ebar{w}_n}\esum_{i=r}^{n} w_i \egeq (1 \- \ealpha) \eright\&. \eright\e}, \e] .RE
.PP
\&\s-2\u[15]\d\s+2[IMAGE]\&\s-2\u[16]\d\s+2 [$n$]
being the number of samples and
\&\s-2\u[17]\d\s+2[IMAGE]\&\s-2\u[18]\d\s+2 [$\bar{w}_n$]
the sum of all weights\&.
.PP

.SS "weighted_tail_quantile_impl public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
weighted_tail_quantile_impl(dont_care);
.fi

.RE

.SS "weighted_tail_quantile_impl public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename Args> result_type result(Args const & args) const;
.fi

.RE


