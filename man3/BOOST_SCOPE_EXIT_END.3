.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "MACRO BOOST_SCO" 3 "" "" ""
.SH "NAME"
BOOST_SCOPE_EXIT_END \- This macro marks the end of a scope exit body\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/scope_exit\&.hpp>

BOOST_SCOPE_EXIT_END
.fi
.SH "DESCRIPTION"
.PP
This macro must follow the closing curly bracket
}
that ends the body of either
BOOST_SCOPE_EXIT
or
BOOST_SCOPE_EXIT_TPL:
.PP

.sp
.if n \{\
.RS 4
.\}
.nf
{ // Some local scope\&.
    \&.\&.\&.
    BOOST_SCOPE_EXIT(capture_list) {
        \&.\&.\&. // Body code\&.
    } BOOST_SCOPE_EXIT_END
    \&.\&.\&.
}

.fi
.if n \{\
.RE
.\}

.PP
In general, the special macro
BOOST_SCOPE_EXIT_END_ID
must be used instead of
BOOST_SCOPE_EXIT_END
when it is necessary to expand multiple scope exit bodies on the same line\&.
.PP
\fBNote:\fR
If programmers define the
BOOST_SCOPE_EXIT_CONFIG_USE_LAMBDAS
macro on C++11 compilers, a semicolon
;
can be used instead of this macro\&. However, to maximize portability, it is recommended to always use
BOOST_SCOPE_EXIT_END\&.
.PP
\fBSee:\fR
Tutorial
section,
BOOST_SCOPE_EXIT,
BOOST_SCOPE_EXIT_TPL,
BOOST_SCOPE_EXIT_END_ID\&.

