.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLAT" 3 "" "" ""
.SH "NAME"
boost::date_time::months_duration \- additional duration type that represents a logical month
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/date_duration_types\&.hpp>

template<typename base_config> 
class months_duration {
public:
  // construct/copy/destruct
  months_duration(int_rep);
  months_duration(special_values);

  // public member functions
  int_rep number_of_months() const;
  duration_type get_neg_offset(const date_type &) const;
  duration_type get_offset(const date_type &) const;
  bool operator==(const months_type &) const;
  bool operator!=(const months_type &) const;
  months_type operator+(const months_type &) const;
  months_type & operator+=(const months_type &);
  months_type operator\-(const months_type &) const;
  months_type & operator\-=(const months_type &);
  months_type operator*(const int_type) const;
  months_type & operator*=(const int_type);
  months_type operator/(const int_type) const;
  months_type & operator/=(const int_type);
  months_type operator+(const years_type &) const;
  months_type & operator+=(const years_type &);
  months_type operator\-(const years_type &) const;
  months_type & operator\-=(const years_type &);
};
.fi
.SH "DESCRIPTION"
.PP
A logical month enables things like: "date(2002,Mar,2) + months(2) \-> 2002\-May2"\&. If the date is a last day\-of\-the\-month, the result will also be a last\-day\-of\-the\-month\&.
.SS "months_duration public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
months_duration(int_rep num);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
months_duration(special_values sv);
.fi

.RE

.SS "months_duration public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
int_rep number_of_months() const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
duration_type get_neg_offset(const date_type & d) const;
.fi

returns a negative duration .RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
duration_type get_offset(const date_type & d) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
bool operator==(const months_type & rhs) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}

.sp

.nf
bool operator!=(const months_type & rhs) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}

.sp

.nf
months_type operator+(const months_type & rhs) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 7.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  7." 4.2
.\}

.sp

.nf
months_type & operator+=(const months_type & rhs);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 8.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  8." 4.2
.\}

.sp

.nf
months_type operator\-(const months_type & rhs) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 9.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  9." 4.2
.\}

.sp

.nf
months_type & operator\-=(const months_type & rhs);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04'10.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "10." 4.2
.\}

.sp

.nf
months_type operator*(const int_type rhs) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04'11.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "11." 4.2
.\}

.sp

.nf
months_type & operator*=(const int_type rhs);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04'12.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "12." 4.2
.\}

.sp

.nf
months_type operator/(const int_type rhs) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04'13.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "13." 4.2
.\}

.sp

.nf
months_type & operator/=(const int_type rhs);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04'14.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "14." 4.2
.\}

.sp

.nf
months_type operator+(const years_type & y) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04'15.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "15." 4.2
.\}

.sp

.nf
months_type & operator+=(const years_type & y);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04'16.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "16." 4.2
.\}

.sp

.nf
months_type operator\-(const years_type & y) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04'17.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "17." 4.2
.\}

.sp

.nf
months_type & operator\-=(const years_type & y);
.fi

.RE


