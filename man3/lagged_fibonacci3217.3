.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "TYPE DEFIN" 3 "" "" ""
.SH "NAME"
lagged_fibonacci3217
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/random/lagged_fibonacci\&.hpp>


typedef lagged_fibonacci_01_engine< double, 48, 3217, 576 > lagged_fibonacci3217;
.fi
.SH "DESCRIPTION"
.PP
The specializations lagged_fibonacci607 \&.\&.\&. lagged_fibonacci44497 use well tested lags\&.
.PP
See
.PP

.PP "On the Periods of Generalized Fibonacci Recurrences", Richard P\&. Brent Computer Sciences Laboratory Australian National University, December 1992
.PP
The lags used here can be found in
.PP

.PP "Uniform random number generators for supercomputers", Richard Brent, Proc\&. of Fifth Australian Supercomputer Conference, Melbourne, Dec\&. 1992, pp\&. 704\-706\&.

