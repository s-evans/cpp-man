.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEM" 3 "" "" ""
.SH "NAME"
boost::CV::simple_exception_policy \- Template to shortcut the constrained_value policy creation process\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/constrained_value\&.hpp>

template<typename rep_type, rep_type min_value, rep_type max_value, 
         typename exception_type> 
class simple_exception_policy {
public:
  // types
  typedef rep_type value_type;

  // member classes/structs/unions

  struct exception_wrapper : public exception_type {

    // public member functions
    operator std::out_of_range() const;
  };

  // public static functions
  static rep_type min BOOST_PREVENT_MACRO_SUBSTITUTION();
  static rep_type max BOOST_PREVENT_MACRO_SUBSTITUTION();
  static void on_error(rep_type, rep_type, violation_enum);
};
.fi
.SH "DESCRIPTION"
.SS "simple_exception_policy public static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static rep_type min BOOST_PREVENT_MACRO_SUBSTITUTION();
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
static rep_type max BOOST_PREVENT_MACRO_SUBSTITUTION();
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
static void on_error(rep_type, rep_type, violation_enum);
.fi

.RE


