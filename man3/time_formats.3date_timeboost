.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLAT" 3 "" "" ""
.SH "NAME"
boost::date_time::time_formats
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/time_facet\&.hpp>

template<typename CharT> 
struct time_formats {
  // types
  typedef CharT char_type;

  // public data members
  static const char_type fractional_seconds_format;
  static const char_type fractional_seconds_or_none_format;
  static const char_type seconds_with_fractional_seconds_format;
  static const char_type seconds_format;
  static const char_type hours_format;
  static const char_type unrestricted_hours_format;
  static const char_type full_24_hour_time_format;
  static const char_type full_24_hour_time_expanded_format;
  static const char_type short_24_hour_time_format;
  static const char_type short_24_hour_time_expanded_format;
  static const char_type standard_format;
  static const char_type zone_abbrev_format;
  static const char_type zone_name_format;
  static const char_type zone_iso_format;
  static const char_type zone_iso_extended_format;
  static const char_type posix_zone_string_format;
  static const char_type duration_sign_negative_only;
  static const char_type duration_sign_always;
  static const char_type duration_seperator;
  static const char_type negative_sign;
  static const char_type positive_sign;
  static const char_type iso_time_format_specifier;
  static const char_type iso_time_format_extended_specifier;
  static const char_type default_time_format;
  static const char_type default_time_input_format;
  static const char_type default_time_duration_format;
};
.fi

