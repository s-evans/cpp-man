.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTIO" 3 "" "" ""
.SH "NAME"
boost::date_time::winapi::file_time_to_microseconds
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/filetime_functions\&.hpp>


template<typename FileTimeT> 
  boost::uint64_t file_time_to_microseconds(FileTimeT const & ft);
.fi
.SH "DESCRIPTION"
.PP
The function converts file_time into number of microseconds elapsed since 1970\-Jan\-01
.PP
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
Only dates after 1970\-Jan\-01 are supported\&. Dates before will be wrapped\&.
.sp .5v
.RE

.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
The function is templated on the
FILETIME
type, so that it can be used with both native
FILETIME
and the ad\-hoc boost::date_time::winapi::file_time type\&.
.sp .5v
.RE


