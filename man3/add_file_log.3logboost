.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMP" 3 "" "" ""
.SH "NAME"
boost::log::add_file_log
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/utility/setup/file\&.hpp>


template<typename\&.\&.\&. ArgsT> 
  shared_ptr< sinks::synchronous_sink< sinks::text_file_backend > > 
  add_file_log(ArgsT\&.\&.\&.const & args);
.fi
.SH "DESCRIPTION"
.PP
The function initializes the logging library to write logs to a file stream\&.
.PP

.PP
Parameters:
.RS 4
.PP
args
.RS 4
A number of named arguments\&. The following parameters are supported:

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
file_name
The file name or its pattern\&. This parameter is mandatory\&.
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
open_mode
The mask that describes the open mode for the file\&. See
std::ios_base::openmode\&.
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
rotation_size
The size of the file at which rotation should occur\&. See
basic_text_file_backend\&.
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
time_based_rotation
The predicate for time\-based file rotations\&. See
basic_text_file_backend\&.
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
auto_flush
A boolean flag that shows whether the sink should automatically flush the file after each written record\&.
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
target
The target directory to store rotated files in\&. See
sinks::file::make_collector\&.
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
max_size
The maximum total size of rotated files in the target directory\&. See
sinks::file::make_collector\&.
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
min_free_space
Minimum free space in the target directory\&. See
sinks::file::make_collector\&.
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
scan_method
The method of scanning the target directory for log files\&. See
sinks::file::scan_method\&.
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
filter
Specifies a filter to install into the sink\&. May be a string that represents a filter, or a filter lambda expression\&.
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
format
Specifies a formatter to install into the sink\&. May be a string that represents a formatter, or a formatter lambda expression (either streaming or Boost\&.Format\-like notation)\&.
.RE
.RS 4

.RE
.RE
.PP
Returns:
.RS 4
Pointer to the constructed sink\&.
.RE

