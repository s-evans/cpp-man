.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS GREG_DAY" 3 "" "" ""
.SH "NAME"
boost::gregorian::greg_day \- Represent a day of the month (range 1 \- 31)
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/gregorian/greg_day\&.hpp>


class greg_day : public greg_day_rep {
public:
  // construct/copy/destruct
  greg_day(unsigned short);

  // public member functions
  unsigned short as_number() const;
  operator unsigned short() const;
};
.fi
.SH "DESCRIPTION"
.PP
This small class allows for simple conversion an integer value into a day of the month for a standard gregorian calendar\&. The type is automatically range checked so values outside of the range 1\-31 will cause a
bad_day_of_month
exception
.SS "greg_day public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
greg_day(unsigned short day_of_month);
.fi

.RE

.SS "greg_day public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
unsigned short as_number() const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
operator unsigned short() const;
.fi

.RE


