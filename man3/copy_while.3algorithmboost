.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPL" 3 "" "" ""
.SH "NAME"
boost::algorithm::copy_while \- Copies all the elements at the start of the input range that satisfy the predicate to the output range\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/cxx11/copy_if\&.hpp>


template<typename Range, typename OutputIterator, typename Predicate> 
  std::pair< typename boost::range_iterator< const Range >::type, OutputIterator > 
  copy_while(const Range & r, OutputIterator result, Predicate p);
.fi
.SH "DESCRIPTION"
.PP

.PP
Parameters:
.RS 4
.PP
p
.RS 4
A predicate for testing the elements of the range
.RE
.PP
r
.RS 4
The input range
.RE
.PP
result
.RS 4
An output iterator to write the results into
.RE
.RE
.PP
Returns:
.RS 4
The updated input and output iterators
.RE

