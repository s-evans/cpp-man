.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT IMPLEME" 3 "" "" ""
.SH "NAME"
boost::heap::skew_heap::implementation_defined
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/heap/skew_heap\&.hpp>



struct implementation_defined {
  // types
  typedef T                               value_type;         
  typedef base_maker::compare_argument    value_compare;      
  typedef base_maker::allocator_type      allocator_type;     
  typedef base_maker::node_type           node;               
  typedef allocator_type::pointer         node_pointer;       
  typedef allocator_type::const_pointer   const_node_pointer; 
  typedef \fIunspecified\fR                     value_extractor;    
  typedef boost::array< node_pointer, 2 > child_list_type;    
  typedef child_list_type::iterator       child_list_iterator;
  typedef \fIunspecified\fR                     iterator;           
  typedef iterator                        const_iterator;     
  typedef \fIunspecified\fR                     ordered_iterator;   
  typedef \fIunspecified\fR                     reference;          
  typedef \fIunspecified\fR                     handle_type;        
};
.fi

