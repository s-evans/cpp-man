.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TRIBOOL" 3 "" "" ""
.SH "NAME"
boost::logic::tribool \- A 3\-state boolean type\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/logic/tribool\&.hpp>


class tribool {
public:
  enum value_t;
  // construct/copy/destruct
  tribool() noexcept;
  tribool(bool) noexcept;
  tribool(indeterminate_keyword_t) noexcept;

  // public member functions
  BOOST_CONSTEXPR operator safe_bool() const noexcept;

  // public data members
  enum boost::logic::tribool::value_t value;
};
.fi
.SH "DESCRIPTION"
.PP
3\-state boolean values are either true, false, or indeterminate\&.
.SS "tribool public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
tribool() noexcept;
.fi

.sp
Construct a new 3\-state boolean value with the value \'false\'\&.
.sp

.PP
Throws:
.RS 4
Will not throw\&.
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
tribool(bool initial_value) noexcept;
.fi

.sp
Construct a new 3\-state boolean value with the given boolean value, which may be
true
or
false\&.
.sp

.PP
Throws:
.RS 4
Will not throw\&.
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
tribool(indeterminate_keyword_t) noexcept;
.fi

.sp
Construct a new 3\-state boolean value with an indeterminate value\&.
.sp

.PP
Throws:
.RS 4
Will not throw\&.
.RE
.RE

.SS "tribool public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
BOOST_CONSTEXPR operator safe_bool() const noexcept;
.fi

.sp
Use a 3\-state boolean in a boolean context\&. Will evaluate true in a boolean context only when the 3\-state boolean is definitely true\&.
.sp

.PP
Returns:
.RS 4
true if the 3\-state boolean is true, false otherwise
.RE
.PP
Throws:
.RS 4
Will not throw\&.
.RE
.RE


