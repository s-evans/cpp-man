.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT FLATTEN" 3 "" "" ""
.SH "NAME"
boost::proto::functional::flatten \- A PolymorphicFunctionObject type that returns a "flattened" view of a Proto expression tree\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/fusion\&.hpp>


struct flatten :  proto::callable {
  // member classes/structs/unions
  template<typename This, typename Expr> 
  struct result<This(Expr)> :  result< This(Expr const &) > {
  };
  template<typename This, typename Expr> 
  struct result<This(Expr &)> :  proto::result_of::flatten< Expr > {
  };

  // public member functions
  template<typename Expr> 
    typename proto::result_of::flatten< Expr >::type const 
    operator()(Expr &) const;
  template<typename Expr> 
    typename proto::result_of::flatten< Expr const >::type const 
    operator()(Expr const &) const;
};
.fi
.SH "DESCRIPTION"
.PP
A
PolymorphicFunctionObject
type that returns a "flattened" view of a Proto expression tree\&. For a tree with a top\-most node tag of type
T, the elements of the flattened sequence are determined by recursing into each child node with the same tag type and returning those nodes of different type\&. So for instance, the Proto expression tree corresponding to the expression
a | b | c
has a flattened view with elements [a, b, c], even though the tree is grouped as
((a | b) | c)\&.
.PP
The resulting view is a Fusion Forward Sequence\&.
.SS "flatten public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename Expr> 
  typename proto::result_of::flatten< Expr >::type const 
  operator()(Expr & expr) const;
.fi

.sp
Returns a Fusion Forward Sequence representing a flattened view of
expr\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
template<typename Expr> 
  typename proto::result_of::flatten< Expr const >::type const 
  operator()(Expr const & expr) const;
.fi

.sp
Returns a Fusion Forward Sequence representing a flattened view of
expr\&.
.RE


