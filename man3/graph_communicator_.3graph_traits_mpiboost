.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT" 3 "" "" ""
.SH "NAME"
boost::graph_traits<mpi::graph_communicator> \- Traits structure that allows a communicator with graph topology to be view as a graph by the Boost Graph Library\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/mpi/graph_communicator\&.hpp>


struct graph_traits<mpi::graph_communicator> {
  // types
  typedef int                        vertex_descriptor;     
  typedef std::pair< int, int >      edge_descriptor;       
  typedef directed_tag               directed_category;     
  typedef disallow_parallel_edge_tag edge_parallel_category;
  typedef \fIunspecified\fR                out_edge_iterator;     
  typedef int                        degree_size_type;      
  typedef \fIunspecified\fR                adjacency_iterator;    
  typedef counting_iterator< int >   vertex_iterator;       
  typedef int                        vertices_size_type;    
  typedef \fIunspecified\fR                edge_iterator;         
  typedef int                        edges_size_type;       

  // public static functions
  static vertex_descriptor null_vertex();
};
.fi
.SH "DESCRIPTION"
.PP
The specialization of
graph_traits
for an MPI communicator allows a communicator with graph topology to be viewed as a graph\&. An MPI communicator with graph topology meets the requirements of the Graph, Incidence Graph, Adjacency Graph, Vertex List Graph, and Edge List Graph concepts from the Boost Graph Library\&.
.SS "graph_traits public static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static vertex_descriptor null_vertex();
.fi

Returns a vertex descriptor that can never refer to any valid vertex\&. .RE


