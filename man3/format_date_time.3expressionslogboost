.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TE" 3 "" "" ""
.SH "NAME"
boost::log::expressions::format_date_time
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/expressions/formatters/date_time\&.hpp>


template<typename T, typename FallbackPolicyT, typename TagT, 
         template< typename > class ActorT, typename CharT> 
  format_date_time_actor< T, FallbackPolicyT, CharT, ActorT > 
  format_date_time(attribute_actor< T, FallbackPolicyT, TagT, ActorT > const & placeholder, 
                   std::basic_string< CharT > const & format);
.fi
.SH "DESCRIPTION"
.PP
The function generates a manipulator node in a template expression\&. The manipulator must participate in a formatting expression (stream output or
format
placeholder filler)\&.
.PP

.PP
Parameters:
.RS 4
.PP
format
.RS 4
Format string
.RE
.PP
placeholder
.RS 4
Attribute placeholder
.RE
.RE

