.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION T" 3 "" "" ""
.SH "NAME"
boost::mpi::python::register_serialized \- Register the type T for direct serialization within Boost\&.MPI\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/mpi/python\&.hpp>


template<typename T> 
  void register_serialized(const T & value = T(), PyTypeObject * type = 0);
.fi
.SH "DESCRIPTION"
.PP
The
register_serialized
function registers a C++ type for direct serialization within Boost\&.MPI\&. Direct serialization elides the use of the Python
pickle
package when serializing Python objects that represent C++ values\&. Direct serialization can be beneficial both to improve serialization performance (Python pickling can be very inefficient) and to permit serialization for Python\-wrapped C++ objects that do not support pickling\&.
.PP

.PP
Parameters:
.RS 4
.PP
type
.RS 4
The Python type associated with the C++ type
T\&. If not provided, it will be computed from the same value
value\&.
.RE
.PP
value
.RS 4
A sample value of the type
T\&. This may be used to compute the Python type associated with the C++ type
T\&.
.RE
.RE

