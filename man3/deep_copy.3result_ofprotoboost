.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE " 3 "" "" ""
.SH "NAME"
boost::proto::result_of::deep_copy \- A metafunction for calculating the return type of proto::deep_copy()\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/deep_copy\&.hpp>

template<typename Expr> 
struct deep_copy {
  // types
  typedef \fIunspecified\fR type;
};
.fi
.SH "DESCRIPTION"
.PP
A metafunction for calculating the return type of
proto::deep_copy()\&. The type parameter
Expr
should be the type of a Proto expression tree\&. It should not be a reference type, nor should it be cv\-qualified\&.

