.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPL" 3 "" "" ""
.SH "NAME"
boost::algorithm::operator&& \- predicate \'and\' composition predicate
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/string/classification\&.hpp>


template<typename Pred1T, typename Pred2T> 
  \fIunspecified\fR operator&&(const predicate_facade< Pred1T > & Pred1, 
                         const predicate_facade< Pred2T > & Pred2);
.fi
.SH "DESCRIPTION"
.PP
Construct the
class_and
predicate\&. This predicate can be used to logically combine two classification predicates\&.
class_and
holds, if both predicates return true\&.
.PP

.PP
Parameters:
.RS 4
.PP
Pred1
.RS 4
The first predicate
.RE
.PP
Pred2
.RS 4
The second predicate
.RE
.RE
.PP
Returns:
.RS 4
An instance of the
class_and
predicate
.RE

