.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT " 3 "" "" ""
.SH "NAME"
boost::accumulators::impl::non_coherent_tail_mean_impl \- Estimation of the (non\-coherent) tail mean based on order statistics (for both left and right tails)
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/accumulators/statistics_fwd\&.hpp>

template<typename Sample, typename LeftRight> 
struct non_coherent_tail_mean_impl : public accumulator_base {
  // construct/copy/destruct
  non_coherent_tail_mean_impl(dont_care);

  // public member functions
  template<typename Args> result_type result(Args const &) const;
};
.fi
.SH "DESCRIPTION"
.PP
An estimation of the non\-coherent tail mean
\&\s-2\u[1]\d\s+2[IMAGE]\&\s-2\u[2]\d\s+2 [$\widehat{NCTM}_{n,\alpha}(X)$]
is given by the mean of the
\&\s-2\u[3]\d\s+2[IMAGE]\&\s-2\u[4]\d\s+2 [$\lceil n\alpha\rceil$]
smallest samples (left tail) or the mean of the
\&\s-2\u[5]\d\s+2[IMAGE]\&\s-2\u[6]\d\s+2 [$\lceil n(1-\alpha)\rceil$]
largest samples (right tail),
\&\s-2\u[7]\d\s+2[IMAGE]\&\s-2\u[8]\d\s+2 [$n$]
being the total number of samples and
\&\s-2\u[9]\d\s+2[IMAGE]\&\s-2\u[10]\d\s+2 [$\alpha$]
the quantile level:
.PP
\fBEquation 1.22. \fR \&\s-2\u[11]\d\s+2.sp .RS 4 [IMAGE]\&\s-2\u[12]\d\s+2 \e[ \ewidehat{NCTM}_{n,\ealpha}^{\emathrm{right}}(X) = \efrac{1}{\elceil n(1\-\ealpha)\erceil} \esum_{i=\elceil \ealpha n \erceil}^n X_{i:n} \e] .RE
.PP
\fBEquation 1.23. \fR \&\s-2\u[13]\d\s+2.sp .RS 4 [IMAGE]\&\s-2\u[14]\d\s+2 \e[ \ewidehat{NCTM}_{n,\ealpha}^{\emathrm{left}}(X) = \efrac{1}{\elceil n\ealpha\erceil} \esum_{i=1}^{\elceil \ealpha n \erceil} X_{i:n} \e] .RE
.PP
It thus requires the caching of at least the
\&\s-2\u[15]\d\s+2[IMAGE]\&\s-2\u[4]\d\s+2 [$\lceil n\alpha\rceil$]
smallest or the
\&\s-2\u[16]\d\s+2[IMAGE]\&\s-2\u[6]\d\s+2 [$\lceil n(1-\alpha)\rceil$]
largest samples\&.
.PP

.SS "non_coherent_tail_mean_impl public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
non_coherent_tail_mean_impl(dont_care);
.fi

.RE

.SS "non_coherent_tail_mean_impl public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename Args> result_type result(Args const & args) const;
.fi

.RE


