.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "MACRO BOOST_T" 3 "" "" ""
.SH "NAME"
BOOST_TTI_TRAIT_HAS_DATA \- Expands to a metafunction which tests whether member data or static member with a particular name and type exists\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/tti/has_data\&.hpp>

BOOST_TTI_TRAIT_HAS_DATA(trait, name)
.fi
.SH "DESCRIPTION"
.PP
trait = the name of the metafunction\&.
.PP
name = the name of the inner member to introspect\&.
.PP
generates a metafunction called "trait" where \'trait\' is the macro parameter\&. template<class BOOST_TTI_TP_T,class BOOST_TTI_TP_TYPE> struct trait { static const value = unspecified; typedef mpl::bool_<true\-or\-false> type; }; The metafunction types and return: BOOST_TTI_TP_T = the enclosing type in which to look for our \'name\' BOOST_TTI_TP_TYPE = The type of the member data or static member\&. returns = \'value\' is true if the \'name\' exists, with the correct data type, otherwise \'value\' is false\&.

