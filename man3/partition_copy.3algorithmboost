.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEM" 3 "" "" ""
.SH "NAME"
boost::algorithm::partition_copy
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/cxx11/partition_copy\&.hpp>


template<typename Range, typename OutputIterator1, typename OutputIterator2, 
         typename UnaryPredicate> 
  std::pair< OutputIterator1, OutputIterator2 > 
  partition_copy(const Range & r, OutputIterator1 out_true, 
                 OutputIterator2 out_false, UnaryPredicate p);
.fi
.SH "DESCRIPTION"
.PP

.PP
Parameters:
.RS 4
.PP
out_false
.RS 4
An output iterator to write the elements that do not satisfy the predicate into
.RE
.PP
out_true
.RS 4
An output iterator to write the elements that satisfy the predicate into
.RE
.PP
p
.RS 4
A predicate for dividing the elements of the input sequence\&.
.RE
.PP
r
.RS 4
The input range
.RE
.RE

