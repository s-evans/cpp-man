.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT FIRST" 3 "" "" ""
.SH "NAME"
boost::xpressive::op::first \- first is a PolymorphicFunctionObject for fetching the first element of a pair\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/xpressive/regex_actions\&.hpp>


struct first {
  // member classes/structs/unions
  template<typename Sig> 
  struct result {
  };
  template<typename This, typename Pair> 
  struct result<This(Pair)> {
    // types
    typedef remove_reference< Pair >::type::first_type type;
  };

  // public member functions
  template<typename Pair> Pair::first_type operator()(Pair const &) const;
};
.fi
.SH "DESCRIPTION"
.SS "first public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename Pair> Pair::first_type operator()(Pair const & p) const;
.fi

.sp

.PP
Parameters:
.RS 4
.PP
p
.RS 4
The pair from which to fetch the first element\&.
.RE
.RE
.PP
Returns:
.RS 4
p\&.first
.RE
.RE


