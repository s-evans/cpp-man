.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT SENTRY" 3 "" "" ""
.SH "NAME"
boost::log::attributes::named_scope::sentry \- Sentry object class to automatically push and pop scopes\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/attributes/named_scope\&.hpp>



// Sentry object class to automatically push and pop scopes\&.

struct sentry {
  // construct/copy/destruct
  sentry(string_literal const &, string_literal const &, unsigned int, 
         scope_entry::scope_name_type = scope_entry::general) noexcept;
  sentry(sentry const &) = delete;
  sentry & operator=(sentry const &) = delete;
  ~sentry();
};
.fi
.SH "DESCRIPTION"
.SS "sentry public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
sentry(string_literal const & sn, string_literal const & fn, unsigned int ln, 
       scope_entry::scope_name_type t = scope_entry::general) noexcept;
.fi

.sp
Constructor\&. Pushes the specified scope to the end of the thread\-local list of scopes\&.
.sp

.PP
Parameters:
.RS 4
.PP
fn
.RS 4
File name, in which the scope is located\&.
.RE
.PP
ln
.RS 4
Line number in the file\&.
.RE
.PP
sn
.RS 4
Scope name\&.
.RE
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
sentry(sentry const &) = delete;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
sentry & operator=(sentry const &) = delete;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
~sentry();
.fi

.sp
Destructor\&. Removes the last pushed scope from the thread\-local list of scopes\&.
.RE


