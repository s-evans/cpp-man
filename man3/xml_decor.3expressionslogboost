.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GLOBAL XML_DECOR" 3 "" "" ""
.SH "NAME"
boost::log::expressions::xml_decor
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/expressions/formatters/xml_decorator\&.hpp>

\fIunspecified\fR xml_decor;
.fi
.SH "DESCRIPTION"
.PP
XML\-style decorator generator object\&. The decorator replaces characters that have special meaning in XML documents with the corresponding decorated counterparts\&. The generator provides
operator[]
that can be used to construct the actual decorator\&. For example:
.PP
xml_decor[ stream << attr< std::string >("MyAttr") ]
.PP
For wide\-character formatting there is the similar
wxml_decor
decorator generator object\&.

