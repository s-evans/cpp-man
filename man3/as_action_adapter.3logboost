.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPL" 3 "" "" ""
.SH "NAME"
boost::log::as_action_adapter \- Function object adapter for Boost\&.Spirit actions\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/utility/functional/as_action\&.hpp>

template<typename FunT> 
struct as_action_adapter {
  // types
  typedef FunT::result_type result_type;

  // construct/copy/destruct
  as_action_adapter() = default;
  explicit as_action_adapter(FunT const &);

  // public member functions
  template<typename AttributeT, typename ContextT> 
    result_type operator()(AttributeT const &, ContextT const &, bool &) const;
};
.fi
.SH "DESCRIPTION"
.SS "as_action_adapter public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
as_action_adapter() = default;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
explicit as_action_adapter(FunT const & fun);
.fi

.RE

.SS "as_action_adapter public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename AttributeT, typename ContextT> 
  result_type operator()(AttributeT const & attr, ContextT const & ctx, 
                         bool & pass) const;
.fi

.RE


