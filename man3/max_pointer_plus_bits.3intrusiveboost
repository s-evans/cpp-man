.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEM" 3 "" "" ""
.SH "NAME"
boost::intrusive::max_pointer_plus_bits
.SH "SYNOPSIS"
.\" max_pointer_plus_bits: Struct template max_pointer_plus_bits
.\" Struct template max_pointer_plus_bits: max_pointer_plus_bits

.sp
.nf
// In header: <boost/intrusive/pointer_plus_bits\&.hpp>

template<typename VoidPointer, std::size_t Alignment> 
struct max_pointer_plus_bits {

  // public data members
  static const std::size_t value;
};
.fi
.SH "DESCRIPTION"
.PP
This trait class is used to know if a pointer can embed extra bits of information if it\'s going to be used to point to objects with an alignment of "Alignment" bytes\&.

