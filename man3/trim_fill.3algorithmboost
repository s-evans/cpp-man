.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPLA" 3 "" "" ""
.SH "NAME"
boost::algorithm::trim_fill \- Trim Fill\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/string/trim_all\&.hpp>


template<typename SequenceT, typename RangeT> 
  void trim_fill(SequenceT & Input, const RangeT & Fill, 
                 const std::locale & Loc = std::locale());
.fi
.SH "DESCRIPTION"
.PP
Remove all leading and trailing spaces from the input and replace all every block of consecutive spaces with a fill string defined by user\&. The input sequence is modified in\-place\&.
.PP

.PP
Parameters:
.RS 4
.PP
Fill
.RS 4
A string used to fill the inner spaces
.RE
.PP
Input
.RS 4
An input sequence
.RE
.PP
Loc
.RS 4
A locale used for \'space\' classification
.RE
.RE
.PP
Returns:
.RS 4
A trimmed copy of the input
.RE

