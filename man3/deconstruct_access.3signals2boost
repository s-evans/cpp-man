.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS DECONSTRUC" 3 "" "" ""
.SH "NAME"
boost::signals2::deconstruct_access \- Gives deconstruct access to private/protected constructors\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/signals2/deconstruct\&.hpp>


class deconstruct_access {
};
.fi
.SH "DESCRIPTION"
.PP
Declaring
deconstruct_access
a friend to your class will give the
deconstruct
factory function access to your class\' private and protected constructors\&. Using private constructors in conjunction with
deconstruct_access
can be useful to ensure postconstructible or predestructible objects are always created properly using
deconstruct\&.

