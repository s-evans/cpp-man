.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS INVALID_SYNT" 3 "" "" ""
.SH "NAME"
boost::program_options::invalid_syntax
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/program_options/errors\&.hpp>


class invalid_syntax : public boost::program_options::error_with_option_name {
public:

  enum kind_t { long_not_allowed = = 30, long_adjacent_not_allowed, 
                short_adjacent_not_allowed, empty_adjacent_parameter, 
                missing_parameter, extra_parameter, unrecognized_line };
  // construct/copy/destruct
  invalid_syntax(kind_t, const std::string & = "", const std::string & = "", 
                 int = 0);
  ~invalid_syntax();

  // public member functions
  kind_t kind() const;
  virtual std::string tokens() const;

  // protected member functions
  std::string get_template(kind_t);
};
.fi
.SH "DESCRIPTION"
.PP
Class thrown when there\'s syntax error either for command line or config file options\&. See derived children for concrete classes\&.
.SS "invalid_syntax public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
invalid_syntax(kind_t kind, const std::string & option_name = "", 
               const std::string & original_token = "", int option_style = 0);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
~invalid_syntax();
.fi

.RE

.SS "invalid_syntax public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
kind_t kind() const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
virtual std::string tokens() const;
.fi

.sp
Convenience functions for backwards compatibility
.RE

.SS "invalid_syntax protected member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
std::string get_template(kind_t kind);
.fi

.sp
Used to convert kind_t to a related error text
.RE


