.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION" 3 "" "" ""
.SH "NAME"
boost::intrusive::get_parent_from_member
.SH "SYNOPSIS"
.\" get_parent_from_member: Function template get_parent_from_member
.\" Function template get_parent_from_member: get_parent_from_member

.sp
.nf
// In header: <boost/intrusive/parent_from_member\&.hpp>


template<typename Parent, typename Member> 
  const Parent * 
  get_parent_from_member(const Member * member, 
                         const Member Parent::* ptr_to_member);
.fi
.SH "DESCRIPTION"
.PP
Given a const pointer to a member and its corresponding const pointer to data member, this function returns the const pointer of the parent containing that member\&. Note: this function does not work with pointer to members that rely on virtual inheritance\&.

