.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPL" 3 "" "" ""
.SH "NAME"
boost::algorithm::find_if_not \- Finds the first element in the sequence that does not satisfy the predicate\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/cxx11/find_if_not\&.hpp>


template<typename Range, typename Predicate> 
  boost::range_iterator< const Range >::type 
  find_if_not(const Range & r, Predicate p);
.fi
.SH "DESCRIPTION"
.PP

.PP
Parameters:
.RS 4
.PP
p
.RS 4
A predicate for testing the elements of the range
.RE
.PP
r
.RS 4
The input range
.RE
.RE
.PP
Returns:
.RS 4
The iterator pointing to the desired element\&.
.RE

