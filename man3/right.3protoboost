.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION RIGHT" 3 "" "" ""
.SH "NAME"
boost::proto::right \- Return the right child of the specified binary Proto expression\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/traits\&.hpp>


template<typename Expr> 
  typename proto::result_of::right< Expr & >::type right(Expr & expr);
template<typename Expr> 
  typename proto::result_of::right< Expr const & >::type 
  right(Expr const & expr);
.fi
.SH "DESCRIPTION"
.PP
Return the right child of the specified binary Proto expression\&. The child is returned by reference\&.
.PP
Parameters:
.RS 4
.PP
expr
.RS 4
The Proto expression\&.
.RE
.RE
.PP
Requires:
.RS 4

proto::is_expr<Expr>::value
is
true\&.
.sp

2 == Expr::proto_arity::value
.RE
.PP
Returns:
.RS 4
A reference to the right child of
expr\&.
.RE
.PP
Throws:
.RS 4
Will not throw\&.
.RE

