.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION GATHER" 3 "" "" ""
.SH "NAME"
boost::mpi::gather \- Gather the values stored at every process into a vector at the root process\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/mpi/collectives\&.hpp>


template<typename T> 
  void gather(const communicator & comm, const T & in_value, 
              std::vector< T > & out_values, int root);
template<typename T> 
  void gather(const communicator & comm, const T & in_value, T * out_values, 
              int root);
template<typename T> 
  void gather(const communicator & comm, const T & in_value, int root);
template<typename T> 
  void gather(const communicator & comm, const T * in_values, int n, 
              std::vector< T > & out_values, int root);
template<typename T> 
  void gather(const communicator & comm, const T * in_values, int n, 
              T * out_values, int root);
template<typename T> 
  void gather(const communicator & comm, const T * in_values, int n, int root);
.fi
.SH "DESCRIPTION"
.PP
gather
is a collective algorithm that collects the values stored at each process into a vector of values at the
root
process\&. This vector is indexed by the process number that the value came from\&. The type
T
of the values may be any type that is serializable or has an associated MPI data type\&.
.PP
When the type
T
has an associated MPI data type, this routine invokes
MPI_Gather
to gather the values\&.
.PP

.PP
Parameters:
.RS 4
.PP
comm
.RS 4
The communicator over which the gather will occur\&.
.RE
.PP
in_value
.RS 4
The value to be transmitted by each process\&. For gathering arrays of values,
in_values
points to storage for
n*comm\&.size() values\&.
.RE
.PP
out_values
.RS 4
A vector or pointer to storage that will be populated with the values from each process, indexed by the process ID number\&. If it is a vector, it will be resized accordingly\&. For non\-root processes, this parameter may be omitted\&. If it is still provided, however, it will be unchanged\&.
.RE
.PP
root
.RS 4
The process ID number that will collect the values\&. This value must be the same on all processes\&.
.RE
.RE

