.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION THROW_B" 3 "" "" ""
.SH "NAME"
boost::container::throw_bad_alloc
.SH "SYNOPSIS"
.\" throw_bad_alloc: Function throw_bad_alloc
.\" Function throw_bad_alloc: throw_bad_alloc

.sp
.nf
// In header: <boost/container/throw_exception\&.hpp>


void throw_bad_alloc();
.fi
.SH "DESCRIPTION"
.PP
Exception callback called by Boost\&.Container when fails to allocate the requested storage space\&.

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If BOOST_NO_EXCEPTIONS is NOT defined
std::bad_alloc()
is thrown\&.
.sp

.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If BOOST_NO_EXCEPTIONS is defined and BOOST_CONTAINER_USER_DEFINED_THROW_CALLBACKS is NOT defined
BOOST_ASSERT(!"boost::container bad_alloc thrown")
is called and
std::abort()
if the former returns\&.
.sp

.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If BOOST_NO_EXCEPTIONS and BOOST_CONTAINER_USER_DEFINED_THROW_CALLBACKS are defined the user must provide an implementation and the function should not return\&.
.RE
.sp
.RE


