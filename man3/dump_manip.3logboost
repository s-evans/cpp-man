.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS DUMP_MANIP" 3 "" "" ""
.SH "NAME"
boost::log::dump_manip \- Manipulator for printing binary representation of the data\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/utility/manipulators/dump\&.hpp>


class dump_manip {
public:
  // construct/copy/destruct
  dump_manip(const void *, std::size_t) noexcept;
  dump_manip(dump_manip const &) noexcept;

  // public member functions
  const void * get_data() const noexcept;
  std::size_t get_size() const noexcept;
};
.fi
.SH "DESCRIPTION"
.SS "dump_manip public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
dump_manip(const void * data, std::size_t size) noexcept;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
dump_manip(dump_manip const & that) noexcept;
.fi

.RE

.SS "dump_manip public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
const void * get_data() const noexcept;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
std::size_t get_size() const noexcept;
.fi

.RE


