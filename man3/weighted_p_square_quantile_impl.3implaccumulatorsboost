.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUC" 3 "" "" ""
.SH "NAME"
boost::accumulators::impl::weighted_p_square_quantile_impl \- Single quantile estimation with the [IMAGE]\&\s-2\u[2]\d\s+2 [$P^2$] algorithm for weighted samples\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/accumulators/statistics_fwd\&.hpp>

template<typename Sample, typename Weight, typename Impl> 
struct weighted_p_square_quantile_impl : public accumulator_base {
  // construct/copy/destruct
  template<typename Args> weighted_p_square_quantile_impl(Args const &);

  // public member functions
  template<typename Args> void operator()(Args const &);
  result_type result(dont_care) const;
};
.fi
.SH "DESCRIPTION"
.PP
This version of the
\&\s-2\u[1]\d\s+2[IMAGE]\&\s-2\u[2]\d\s+2 [$P^2$]
algorithm extends the
\&\s-2\u[3]\d\s+2[IMAGE]\&\s-2\u[2]\d\s+2 [$P^2$]
algorithm to support weighted samples\&. The
\&\s-2\u[4]\d\s+2[IMAGE]\&\s-2\u[2]\d\s+2 [$P^2$]
algorithm estimates a quantile dynamically without storing samples\&. Instead of storing the whole sample cumulative distribution, only five points (markers) are stored\&. The heights of these markers are the minimum and the maximum of the samples and the current estimates of the
\&\s-2\u[5]\d\s+2[IMAGE]\&\s-2\u[6]\d\s+2 [$(p/2)$]\-,
\&\s-2\u[7]\d\s+2[IMAGE]\&\s-2\u[8]\d\s+2 [$p$]
\- and
\&\s-2\u[9]\d\s+2[IMAGE]\&\s-2\u[10]\d\s+2 [$(1+p)/2$]
\-quantiles\&. Their positions are equal to the number of samples that are smaller or equal to the markers\&. Each time a new sample is added, the positions of the markers are updated and if necessary their heights are adjusted using a piecewise\- parabolic formula\&.
.PP
For further details, see
.PP
R\&. Jain and I\&. Chlamtac, The P^2 algorithm for dynamic calculation of quantiles and histograms without storing observations, Communications of the ACM, Volume 28 (October), Number 10, 1985, p\&. 1076\-1085\&.
.PP

.SS "weighted_p_square_quantile_impl public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename Args> weighted_p_square_quantile_impl(Args const & args);
.fi

.RE

.SS "weighted_p_square_quantile_impl public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename Args> void operator()(Args const & args);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
result_type result(dont_care) const;
.fi

.RE


