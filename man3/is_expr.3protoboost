.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE I" 3 "" "" ""
.SH "NAME"
boost::proto::is_expr \- A Boolean metafunction that indicates whether a given type T is a Proto expression type\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/traits\&.hpp>

template<typename T> 
struct is_expr :  mpl::bool_<\fItrue\-or\-false\fR> {
};
.fi
.SH "DESCRIPTION"
.PP
If
T
is an instantiation of
proto::expr<>
or
proto::basic_expr<>
or is an extension (via
proto::extends<>
or
BOOST_PROTO_EXTENDS()) of such an instantiation,
proto::is_expr<T>::value
is
true\&. Otherwise,
proto::is_expr<T>::value
is
false\&.

