.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLA" 3 "" "" ""
.SH "NAME"
boost::date_time::day_calc_dst_rule \- Canonical form for a class that provides day rule calculation\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/dst_transition_generators\&.hpp>

template<typename spec> 
class day_calc_dst_rule :
  public boost::date_time::dst_day_calc_rule< spec::date_type >
{
public:
  // types
  typedef spec::date_type      date_type; 
  typedef date_type::year_type year_type; 
  typedef spec::start_rule     start_rule;
  typedef spec::end_rule       end_rule;  

  // construct/copy/destruct
  day_calc_dst_rule(start_rule, end_rule);

  // public member functions
  virtual date_type start_day(year_type) const;
  virtual std::string start_rule_as_string() const;
  virtual date_type end_day(year_type) const;
  virtual std::string end_rule_as_string() const;
};
.fi
.SH "DESCRIPTION"
.PP
This class is used to generate specific sets of dst rules
.PP

.SS "day_calc_dst_rule public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
day_calc_dst_rule(start_rule dst_start, end_rule dst_end);
.fi

.RE

.SS "day_calc_dst_rule public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
virtual date_type start_day(year_type y) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
virtual std::string start_rule_as_string() const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
virtual date_type end_day(year_type y) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
virtual std::string end_rule_as_string() const;
.fi

.RE


