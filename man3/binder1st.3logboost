.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE " 3 "" "" ""
.SH "NAME"
boost::log::binder1st \- First argument binder\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/utility/functional/bind\&.hpp>

template<typename FunT, typename FirstArgT> 
struct binder1st : private FunT {
  // types
  typedef FunT::result_type result_type;

  // construct/copy/destruct
  binder1st(FunT const &, \fIunspecified\fR);

  // public member functions
  result_type operator()() const;
  template<typename T0> result_type operator()(T0 const &) const;
  template<typename T0, typename T1> 
    result_type operator()(T0 const &, T1 const &) const;
};
.fi
.SH "DESCRIPTION"
.SS "binder1st public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
binder1st(FunT const & fun, \fIunspecified\fR arg);
.fi

.RE

.SS "binder1st public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
result_type operator()() const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
template<typename T0> result_type operator()(T0 const & arg0) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
template<typename T0, typename T1> 
  result_type operator()(T0 const & arg0, T1 const & arg1) const;
.fi

.RE


