.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLAT" 3 "" "" ""
.SH "NAME"
boost::accumulators::impl::kurtosis_impl \- Kurtosis estimation\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/accumulators/statistics_fwd\&.hpp>

template<typename Sample> 
struct kurtosis_impl : public accumulator_base {
  // construct/copy/destruct
  kurtosis_impl(dont_care);

  // public member functions
  template<typename Args> result_type result(Args const &) const;
};
.fi
.SH "DESCRIPTION"
.PP
The kurtosis of a sample distribution is defined as the ratio of the 4th central moment and the square of the 2nd central moment (the variance) of the samples, minus 3\&. The term
\&\s-2\u[1]\d\s+2[IMAGE]\&\s-2\u[2]\d\s+2 [$ -3 $]
is added in order to ensure that the normal distribution has zero kurtosis\&. The kurtosis can also be expressed by the simple moments:
.PP
\fBEquation 1.18. \fR \&\s-2\u[3]\d\s+2.sp .RS 4 [IMAGE]\&\s-2\u[4]\d\s+2 \e[ \ehat{g}_2 = \efrac {\ewidehat{m}_n^{(4)}\-4\ewidehat{m}_n^{(3)}\ehat{\emu}_n+6\ewidehat{m}_n^{(2)}\ehat{\emu}_n^2\-3\ehat{\emu}_n^4} {\eleft(\ewidehat{m}_n^{(2)} \- \ehat{\emu}_n^{2}\eright)^2} \- 3, \e] .RE
.PP
where
\&\s-2\u[5]\d\s+2[IMAGE]\&\s-2\u[6]\d\s+2 [$ \widehat{m}_n^{(i)} $]
are the
\&\s-2\u[7]\d\s+2[IMAGE]\&\s-2\u[8]\d\s+2 [$ i $]\-th moment and
\&\s-2\u[9]\d\s+2[IMAGE]\&\s-2\u[10]\d\s+2 [$ \hat{\mu}_n $]
the mean (first moment) of the
\&\s-2\u[11]\d\s+2[IMAGE]\&\s-2\u[12]\d\s+2 [$ n $]
samples\&.
.SS "kurtosis_impl public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
kurtosis_impl(dont_care);
.fi

.RE

.SS "kurtosis_impl public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename Args> result_type result(Args const & args) const;
.fi

.RE


