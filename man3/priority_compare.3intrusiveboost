.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPL" 3 "" "" ""
.SH "NAME"
boost::intrusive::priority_compare
.SH "SYNOPSIS"
.\" second_argument_type: Struct template priority_compare
.\" Struct template priority_compare: second_argument_type
.\" result_type: Struct template priority_compare
.\" Struct template priority_compare: result_type
.\" priority_compare: Struct template priority_compare
.\" Struct template priority_compare: priority_compare
.\" first_argument_type: Struct template priority_compare
.\" Struct template priority_compare: first_argument_type

.sp
.nf
// In header: <boost/intrusive/priority_compare\&.hpp>

template<typename T> 
struct priority_compare {
  // types
  typedef T    first_argument_type; 
  typedef T    second_argument_type;
  typedef bool result_type;         

  // public member functions
  bool operator()(const T &, const T &) const;
};
.fi
.SH "DESCRIPTION"
.SS "priority_compare public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
bool operator()(const T & val, const T & val2) const;
.fi

.RE


