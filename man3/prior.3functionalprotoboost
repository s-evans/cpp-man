.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT PRIOR" 3 "" "" ""
.SH "NAME"
boost::proto::functional::prior \- A PolymorphicFunctionObject type that invokes the std::prior() function on its arguments\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/functional/std/iterator\&.hpp>


struct prior :  proto::callable {
  // member classes/structs/unions
  template<typename This, typename BidirectionalIterator> 
  struct result<This(BidirectionalIterator)> {
    // types
    typedef typename boost::remove_const<
      typename boost::remove_reference<BidirectionalIterator>::type
    >::type type;
  };
  template<typename This, typename BidirectionalIterator, typename Distance> 
  struct result<This(BidirectionalIterator, Distance)> {
    // types
    typedef typename boost::remove_const<
      typename boost::remove_reference<BidirectionalIterator>::type
    >::type type;
  };

  // public member functions
  template<typename BidirectionalIterator> 
    void operator()(BidirectionalIterator) const;
  template<typename BidirectionalIterator> 
    void operator()(BidirectionalIterator, 
                    typename std::iterator_traits<BidirectionalIterator>::difference_type) const;
};
.fi
.SH "DESCRIPTION"
.PP
A
PolymorphicFunctionObject
type that invokes the
std::prior()
function on its arguments\&.
.SS "prior public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename BidirectionalIterator> 
  void operator()(BidirectionalIterator x) const;
.fi

.PP
Returns:
.RS 4
std::prior(x)
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
template<typename BidirectionalIterator> 
  void operator()(BidirectionalIterator x, 
                  typename std::iterator_traits<BidirectionalIterator>::difference_type n) const;
.fi

.PP
Returns:
.RS 4
std::prior(x, n)
.RE
.RE


