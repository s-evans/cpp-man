.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS SCOPED_CONN" 3 "" "" ""
.SH "NAME"
boost::signals::scoped_connection \- Limits a signal\-slot connection lifetime to a particular scope\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/signals/connection\&.hpp>


class scoped_connection : private noncopyable   // Exposition only
{
public:
  // construct/copy/destruct
  scoped_connection(const connection&);
  ~scoped_connection();

  // connection management
  void disconnect() const;
  bool connected() const;
};
.fi
.SH "DESCRIPTION"
.SS "scoped_connection public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
scoped_connection(const connection& other);
.fi

.PP
Effects:
.RS 4
this
references the connection referenced by
other\&.
.RE
.PP
Throws:
.RS 4
Will not throw\&.
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
~scoped_connection();
.fi

.PP
Effects:
.RS 4
If
this\->connected(), disconnects the signal\-slot connection\&.
.RE
.RE

.SS "scoped_connection connection management"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
void disconnect() const;
.fi

.PP
Effects:
.RS 4
If
this\->connected(), disconnects the signal and slot referenced by this; otherwise, this operation is a no\-op\&.
.RE
.PP
Postconditions:
.RS 4
!this\->connected()\&.
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
bool connected() const;
.fi

.PP
Returns:
.RS 4
true
if this references a non\-NULL connection that is still active (connected), and
false
otherwise\&.
.RE
.PP
Throws:
.RS 4
Will not throw\&.
.RE
.RE


