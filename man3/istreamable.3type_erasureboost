.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE" 3 "" "" ""
.SH "NAME"
boost::type_erasure::istreamable
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/type_erasure/operators\&.hpp>

template<typename Is = std::istream, typename T = _self> 
struct istreamable {

  // public static functions
  static void apply(Is &, T &);
};
.fi
.SH "DESCRIPTION"
.PP
The
istreamable
concept allows an any to be read from a
std::istream\&.
.SS "istreamable public static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static void apply(Is & out, T & arg);
.fi

.RE


