.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TE" 3 "" "" ""
.SH "NAME"
boost::move_if_noexcept
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/move/utility\&.hpp>


template<typename T> 
  rvalue_reference_or_const_lvalue_reference move_if_noexcept(input_reference);
.fi
.SH "DESCRIPTION"
.PP
This function provides a way to convert a reference into a rvalue reference in compilers with rvalue references\&. For other compilers converts T & into
\fI::boost::rv<T> &\fR
so that move emulation is activated\&. Reference would be converted to rvalue reference only if input type is nothrow move constructible or if it has no copy constructor\&. In all other cases const reference would be returned

