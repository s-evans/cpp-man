.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE R" 3 "" "" ""
.SH "NAME"
boost::proto::functional::has_env_var::result
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/transform/env\&.hpp>


template<typename Sig> 
struct result {
  // types
  typedef \fIsee\fR\fI\-\fR\fIbelow\fR type;
};
.fi
.SH "DESCRIPTION"
.PP
Encodes the return type of
proto::functional::has_env_var::operator()\&. The presence of this member template makes
proto::functional::has_env_var
a valid TR1\-style function object type usable with
boost::result_of<>\&.
.SS "result public types"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

typedef
\fIsee\fR\fI\-\fR\fIbelow\fR
type;
.sp
See
proto::functional::has_env_var::operator()\&.
.RE


