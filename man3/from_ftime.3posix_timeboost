.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPL" 3 "" "" ""
.SH "NAME"
boost::posix_time::from_ftime \- Function to create a time object from an initialized FILETIME struct\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/posix_time/conversion\&.hpp>


template<typename TimeT, typename FileTimeT> 
  TimeT from_ftime(const FileTimeT & ft);
.fi
.SH "DESCRIPTION"
.PP
Function to create a time object from an initialized FILETIME struct\&. A FILETIME struct holds 100\-nanosecond units (0\&.0000001)\&. When built with microsecond resolution the FILETIME\'s sub second value will be truncated\&. Nanosecond resolution has no truncation\&.
.PP
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
FILETIME is part of the Win32 API, so it is not portable to non\-windows platforms\&.
.sp .5v
.RE

.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
The function is templated on the FILETIME type, so that it can be used with both native FILETIME and the ad\-hoc boost::date_time::winapi::file_time type\&.
.sp .5v
.RE


