.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS GREGORIAN_" 3 "" "" ""
.SH "NAME"
boost::gregorian::gregorian_calendar \- Gregorian calendar for this implementation, hard work in the base\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/gregorian/greg_calendar\&.hpp>


class gregorian_calendar : public date_time::gregorian_calendar_base< greg_year_month_day, fancy_date_rep::int_type >
{
public:
  // types
  typedef greg_weekday         day_of_week_type;  // Type to hold a weekday (eg: Sunday, Monday,\&.\&.\&.) 
  typedef greg_day_of_year_rep day_of_year_type;  // Counter type from 1 to 366 for gregorian dates\&. 
  typedef fancy_date_rep       date_rep_type;     // Internal date representation that handles infinity, not a date\&. 
  typedef fancy_date_rep       date_traits_type;  // Date rep implements the traits stuff as well\&. 
};
.fi

