.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLATE B" 3 "" "" ""
.SH "NAME"
boost::units::base_unit
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/units/base_unit\&.hpp>

template<typename Derived, typename Dim, long N> 
class base_unit : public ordinal< N > {
public:
  // types
  typedef Dim         dimension_type;  // The dimensions of this base unit\&. 
  typedef Derived     type;            // Provided for mpl compatability\&. 
  typedef \fIunspecified\fR unit_type;       // The unit corresponding to this base unit\&. 
};
.fi
.SH "DESCRIPTION"
.PP
Defines a base unit\&. To define a unit you need to provide the derived class (CRTP), a dimension list and a unique integer\&.

.sp
.if n \{\
.RS 4
.\}
.nf
struct my_unit : boost::units::base_unit<my_unit, length_dimension, 1> {};

.fi
.if n \{\
.RE
.\}
.sp
It is designed so that you will get an error message if you try to use the same value in multiple definitions\&.

