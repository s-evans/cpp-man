.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT SIZE" 3 "" "" ""
.SH "NAME"
boost::proto::functional::size \- A PolymorphicFunctionObject type that invokes the boost::size() function on its arguments\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/functional/range/size\&.hpp>


struct size :  proto::callable {
  // member classes/structs/unions
  template<typename This, typename Range> 
  struct result<This(Range)> :  boost::range_size<
      typename boost::remove_reference<Range>::type
  >
  {
  };

  // public member functions
  template<typename Range> 
    typename boost::range_size< Range const >::type 
    operator()(Range const &) const;
};
.fi
.SH "DESCRIPTION"
.PP
A
PolymorphicFunctionObject
type that invokes the
boost::size()
function on its arguments\&.
.SS "size public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename Range> 
  typename boost::range_size< Range const >::type 
  operator()(Range const & rng) const;
.fi

.PP
Returns:
.RS 4
boost::size(rng)
.RE
.RE


