.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMP" 3 "" "" ""
.SH "NAME"
boost::algorithm::is_from_range \- is_from_range predicate
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/string/classification\&.hpp>


template<typename CharT> \fIunspecified\fR is_from_range(CharT From, CharT To);
.fi
.SH "DESCRIPTION"
.PP
Construct the
is_from_range
predicate\&. The predicate holds if the input is included in the specified range\&. (i\&.e\&. From <= Ch <= To )
.PP

.PP
Parameters:
.RS 4
.PP
From
.RS 4
The start of the range
.RE
.PP
To
.RS 4
The end of the range
.RE
.RE
.PP
Returns:
.RS 4
An instance of the
is_from_range
predicate
.RE

