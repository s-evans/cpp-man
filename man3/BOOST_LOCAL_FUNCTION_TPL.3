.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "MACRO BOOST_L" 3 "" "" ""
.SH "NAME"
BOOST_LOCAL_FUNCTION_TPL \- This macro is used to start a local function declaration within templates\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/local_function\&.hpp>

BOOST_LOCAL_FUNCTION_TPL(declarations)
.fi
.SH "DESCRIPTION"
.PP
This macro must be used instead of
BOOST_LOCAL_FUNCTION
when declaring a local function within a template\&. A part from that, this macro has the exact same syntax a
BOOST_LOCAL_FUNCTION
(see
BOOST_LOCAL_FUNCTION
for more information):

.sp
.if n \{\
.RS 4
.\}
.nf
{ // Some declarative context within a template\&.
    \&.\&.\&.
    result_type BOOST_LOCAL_FUNCTION_TPL(declarations) {
        \&.\&.\&. // Body code\&.
    } BOOST_LOCAL_FUNCTION_NAME_TPL(qualified_name)
    \&.\&.\&.
}

.fi
.if n \{\
.RE
.\}

.PP
Note that
BOOST_LOCAL_FUNCTION_NAME_TPL
must be used with this macro instead of
BOOST_LOCAL_FUNCTION_NAME\&.
.PP
This macro cannot be portably expanded multiple times on the same line\&. In these cases, use the
BOOST_LOCAL_FUNCTION_ID_TPL
macro instead\&.
.PP
\fBNote:\fR
C++03 does not allow to use
typename
outside templates\&. This library internally manipulates types, these operations require
typename
but only within templates\&. This macro is used to indicate to the library when the enclosing scope is a template so the library can correctly use
typename\&.
.PP
\fBSee:\fR
Tutorial
section,
BOOST_LOCAL_FUNCTION,
BOOST_LOCAL_FUNCTION_ID_TPL,
BOOST_LOCAL_FUNCTION_NAME_TPL\&.

