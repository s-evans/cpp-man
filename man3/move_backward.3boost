.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMP" 3 "" "" ""
.SH "NAME"
boost::move_backward
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/move/algorithm\&.hpp>


template<typename I, typename O> O move_backward(I f, I l, O result);
.fi
.SH "DESCRIPTION"
.PP
\fBEffects\fR: Moves elements in the range [first,last) into the range [result \- (last\-first),result) starting from last \- 1 and proceeding to first\&. For each positive integer n <= (last \- first), performs *(result \- n) = boost::move(*(last \- n))\&.
.PP
\fBRequires\fR: result shall not be in the range [first,last)\&.
.PP
\fBReturns\fR: result \- (last \- first)\&.
.PP
\fBComplexity\fR: Exactly last \- first assignments\&.

