.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT IMPL" 3 "" "" ""
.SH "NAME"
boost::log::attribute_value::impl \- A base class for an attribute value implementation\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/attributes/attribute_value\&.hpp>



// A base class for an attribute value implementation\&.

struct impl : public attribute::impl {

  // public member functions
  virtual bool dispatch(type_dispatcher &) = 0;
  virtual intrusive_ptr< impl > detach_from_thread();
  virtual attribute_value get_value();
  virtual typeindex::type_index get_type() const;
};
.fi
.SH "DESCRIPTION"
.PP
All attribute value holders should derive from this interface\&.
.SS "impl public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
virtual bool dispatch(type_dispatcher & dispatcher) = 0;
.fi

.sp
The method dispatches the value to the given object\&.
.sp

.PP
Parameters:
.RS 4
.PP
dispatcher
.RS 4
The object that attempts to dispatch the stored value\&.
.RE
.RE
.PP
Returns:
.RS 4
true if
\fIdispatcher\fR
was capable to consume the real attribute value type and false otherwise\&.
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
virtual intrusive_ptr< impl > detach_from_thread();
.fi

.sp
The method is called when the attribute value is passed to another thread (e\&.g\&. in case of asynchronous logging)\&. The value should ensure it properly owns all thread\-specific data\&.
.sp

.PP
Returns:
.RS 4
An actual pointer to the attribute value\&. It may either point to this object or another\&. In the latter case the returned pointer replaces the pointer used by caller to invoke this method and is considered to be a functional equivalent to the previous pointer\&.
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
virtual attribute_value get_value();
.fi

.sp

.PP
Returns:
.RS 4
The attribute value that refers to self implementation\&.
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
virtual typeindex::type_index get_type() const;
.fi

.sp

.PP
Returns:
.RS 4
The attribute value type
.RE
.RE


