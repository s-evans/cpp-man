.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPL" 3 "" "" ""
.SH "NAME"
boost::interprocess::basic_ovectorstream
.SH "SYNOPSIS"
.\" vector_type: Class template basic_ovectorstream
.\" Class template basic_ovectorstream: vector_type
.\" traits_type: Class template basic_ovectorstream
.\" Class template basic_ovectorstream: traits_type
.\" swap_vector: Class template basic_ovectorstream
.\" Class template basic_ovectorstream: swap_vector
.\" reserve: Class template basic_ovectorstream
.\" Class template basic_ovectorstream: reserve
.\" pos_type: Class template basic_ovectorstream
.\" Class template basic_ovectorstream: pos_type
.\" off_type: Class template basic_ovectorstream
.\" Class template basic_ovectorstream: off_type
.\" int_type: Class template basic_ovectorstream
.\" Class template basic_ovectorstream: int_type
.\" char_type: Class template basic_ovectorstream
.\" Class template basic_ovectorstream: char_type

.sp
.nf
// In header: <boost/interprocess/streams/vectorstream\&.hpp>

template<typename CharVector, typename CharTraits> 
class basic_ovectorstream :
  public std::basic_ostream< CharVector::value_type, CharTraits >
{
public:
  // types
  typedef CharVector                                                               vector_type;
  typedef std::basic_ios< typename CharVector::value_type, CharTraits >::char_type char_type;  
  typedef std::basic_ios< char_type, CharTraits >::int_type                        int_type;   
  typedef std::basic_ios< char_type, CharTraits >::pos_type                        pos_type;   
  typedef std::basic_ios< char_type, CharTraits >::off_type                        off_type;   
  typedef std::basic_ios< char_type, CharTraits >::traits_type                     traits_type;

  // construct/copy/destruct
  basic_ovectorstream(std::ios_base::openmode = std::ios_base::out);
  template<typename VectorParameter> 
    basic_ovectorstream(const VectorParameter &, 
                        std::ios_base::openmode = std::ios_base::out);

  // public member functions
  basic_vectorbuf< CharVector, CharTraits > * rdbuf() const;
  void swap_vector(vector_type &);
  const vector_type & vector() const;
  void reserve(typename vector_type::size_type);
};
.fi
.SH "DESCRIPTION"
.PP
A basic_ostream class that holds a character vector specified by CharVector template parameter as its formatting buffer\&. The vector must have contiguous storage, like std::vector, boost::interprocess::vector or boost::interprocess::basic_string
.SS "basic_ovectorstream public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
basic_ovectorstream(std::ios_base::openmode mode = std::ios_base::out);
.fi

.sp
Constructor\&. Throws if vector_type default constructor throws\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
template<typename VectorParameter> 
  basic_ovectorstream(const VectorParameter & param, 
                      std::ios_base::openmode mode = std::ios_base::out);
.fi

.sp
Constructor\&. Throws if vector_type(const VectorParameter &param) throws\&.
.RE

.SS "basic_ovectorstream public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
basic_vectorbuf< CharVector, CharTraits > * rdbuf() const;
.fi

.sp
Returns the address of the stored stream buffer\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
.\" swap_vector: Class template basic_ovectorstream
.\" Class template basic_ovectorstream: swap_vector

.sp

.nf
void swap_vector(vector_type & vect);
.fi

.sp
Swaps the underlying vector with the passed vector\&. This function resets the write position in the stream\&. Does not throw\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
const vector_type & vector() const;
.fi

.sp
Returns a const reference to the internal vector\&. Does not throw\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
.\" reserve: Class template basic_ovectorstream
.\" Class template basic_ovectorstream: reserve
.\" reserve: Class template basic_ovectorstream
.\" Class template basic_ovectorstream: reserve

.sp

.nf
void reserve(typename vector_type::size_type size);
.fi

.sp
Calls reserve() method of the internal vector\&. Resets the stream to the first position\&. Throws if the internals vector\'s reserve throws\&.
.RE


