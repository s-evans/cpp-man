.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT MAKE_PAIR" 3 "" "" ""
.SH "NAME"
boost::proto::functional::make_pair \- A PolymorphicFunctionObject type that invokes std::make_pair() on its arguments\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/functional/std/utility\&.hpp>


struct make_pair :  proto::callable {
  // member classes/structs/unions
  template<typename This, typename First, typename Second> 
  struct result<This(First, Second)> {
    // types
    typedef std::pair<
        typename boost::remove_const<typename boost::remove_reference<First>::type>::type
      , typename boost::remove_const<typename boost::remove_reference<Second>::type>::type
    > type;
  };

  // public member functions
  template<typename First, typename Second> 
    typename std::pair< First, Second > 
    operator()(First const &, Second const &) const;
};
.fi
.SH "DESCRIPTION"
.PP
A
PolymorphicFunctionObject
type that invokes
std::make_pair()
on its arguments\&.
.SS "make_pair public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename First, typename Second> 
  typename std::pair< First, Second > 
  operator()(First const & first, Second const & second) const;
.fi

.PP
Returns:
.RS 4
std::make_pair(first, second)
.RE
.RE


