.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE SC" 3 "" "" ""
.SH "NAME"
boost::units::scale
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/units/scale\&.hpp>

template<long Base, typename Exponent> 
struct scale {
  // types
  typedef Exponent exponent;  
  typedef double   value_type;

  // public static functions
  static value_type value();

  // public data members
  static const long base;
};
.fi
.SH "DESCRIPTION"
.PP
class representing a scaling factor such as 10^3 The exponent must be a static rational\&.
.SS "scale public static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static value_type value();
.fi

.RE


