.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION " 3 "" "" ""
.SH "NAME"
boost::date_time::gather_month_strings \- This function gathers up all the month strings from a std::locale\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/strings_from_facet\&.hpp>


template<typename charT> 
  std::vector< std::basic_string< charT > > 
  gather_month_strings(const std::locale & locale, bool short_strings = true);
.fi
.SH "DESCRIPTION"
.PP
Using the time_put facet, this function creates a collection of all the month strings from a locale\&. This is handy when building custom date parsers or formatters that need to be localized\&.
.PP

.PP
Parameters:
.RS 4
.PP
locale
.RS 4
The locale to use when gathering the strings
.RE
.PP
short_strings
.RS 4
True(default) to gather short strings, false for long strings\&.
.RE
.RE
.PP
Returns:
.RS 4
A vector of strings containing the strings in order\&. eg: Jan, Feb, Mar, etc\&.
.RE

