.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPL" 3 "" "" ""
.SH "NAME"
boost::visitor_ptr \- Returns a visitor object that adapts function pointers for use as a static visitor\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/variant/visitor_ptr\&.hpp>


template<typename R, typename T> visitor_ptr_t<T,R> visitor_ptr(R (*)(T));
.fi
.SH "DESCRIPTION"
.sp
Constructs and returns a visitor_ptr_t adaptor over the given function\&.
.PP
Returns:
.RS 4
Returns a
visitor_ptr_t
visitor object that, when applied, invokes the given function\&.
.RE
.PP
Throws:
.RS 4
Will not throw\&. (Note, however, that the returned
visitor object
may throw when applied\&.)
.RE

