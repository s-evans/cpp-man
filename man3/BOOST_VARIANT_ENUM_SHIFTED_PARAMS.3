.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "MACRO BOO" 3 "" "" ""
.SH "NAME"
BOOST_VARIANT_ENUM_SHIFTED_PARAMS \- Enumerate all but the first parameter for use with variant\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/variant/variant_fwd\&.hpp>

BOOST_VARIANT_ENUM_SHIFTED_PARAMS(param)
.fi
.SH "DESCRIPTION"
.PP
When variadic templates are available and
BOOST_VARIANT_DO_NOT_USE_VARIADIC_TEMPLATES
is not defined, expands to variadic template list in the following manner:
.sp .if n \{\ .RS 4 .\} .nf BOOST_VARIANT_ENUM_SHIFTED_PARAMS(T) => TN\&.\&.\&. BOOST_VARIANT_ENUM_SHIFTED_PARAMS(class T) => class\&.\&.\&. TN BOOST_VARIANT_ENUM_SHIFTED_PARAMS(class Something) => class\&.\&.\&. SomethingN BOOST_VARIANT_ENUM_SHIFTED_PARAMS(typename Something) => typename\&.\&.\&. SomethingN BOOST_VARIANT_ENUM_SHIFTED_PARAMS(Something) => SomethingN\&.\&.\&. BOOST_VARIANT_ENUM_SHIFTED_PARAMS(Something) => SomethingN\&.\&.\&. .fi .if n \{\ .RE .\}
.PP
Otherwise expands to a comma\-separated sequence of length
BOOST_VARIANT_LIMIT_TYPES \- 1, where each element in the sequence consists of the concatenation of
\fIparam\fR
with its one\-based index into the sequence\&. That is,
param ## 1, \&.\&.\&., param ## BOOST_VARIANT_LIMIT_TYPES \- 1\&.
.PP
\fBNote\fR: This macro results in the same expansion as
BOOST_VARIANT_ENUM_PARAMS
\-\- but without the first term\&.

