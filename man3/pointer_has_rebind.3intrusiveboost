.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMP" 3 "" "" ""
.SH "NAME"
boost::intrusive::pointer_has_rebind
.SH "SYNOPSIS"
.\" test: Struct template pointer_has_rebind
.\" Struct template pointer_has_rebind: test
.\" pointer_has_rebind: Struct template pointer_has_rebind
.\" Struct template pointer_has_rebind: pointer_has_rebind
.\" any: Struct template pointer_has_rebind
.\" Struct template pointer_has_rebind: any

.sp
.nf
// In header: <boost/intrusive/pointer_rebind\&.hpp>

template<typename Ptr, typename U> 
struct pointer_has_rebind {
  // member classes/structs/unions
  template<typename V> 
  struct any {
    // construct/copy/destruct
    any(const V &);
  };

  // public static functions
  template<typename X> 
    static char test(int, typename X::template rebind< U > *);
  template<typename X> static int test(any< int >, void *);

  // public data members
  static const bool value;
};
.fi
.SH "DESCRIPTION"
.SS "pointer_has_rebind public static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
.\" test: Struct template pointer_has_rebind
.\" Struct template pointer_has_rebind: test

.sp

.nf
template<typename X> static char test(int, typename X::template rebind< U > *);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
.\" test: Struct template pointer_has_rebind
.\" Struct template pointer_has_rebind: test

.sp

.nf
template<typename X> static int test(any< int >, void *);
.fi

.RE


