.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLAT" 3 "" "" ""
.SH "NAME"
boost::intrusive::compare_hash
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/intrusive/options\&.hpp>

template<bool Enabled> 
struct compare_hash {
};
.fi
.SH "DESCRIPTION"
.PP
This option setter specifies if the container will compare the hash value before comparing objects\&. This option can\'t be specified if store_hash<> is not true\&. This is specially helpful when we have containers with a high load factor\&. and the comparison function is much more expensive that comparing already stored hash values\&.

