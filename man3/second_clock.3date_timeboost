.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLATE " 3 "" "" ""
.SH "NAME"
boost::date_time::second_clock \- A clock providing time level services based on C time_t capabilities\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/time_clock\&.hpp>

template<typename time_type> 
class second_clock {
public:
  // types
  typedef time_type::date_type          date_type;         
  typedef time_type::time_duration_type time_duration_type;

  // public static functions
  static time_type local_time();
  static time_type universal_time();
  template<typename time_zone_type> 
    static time_type local_time(boost::shared_ptr< time_zone_type >);

  // private static functions
  static time_type create_time(::std::tm *);
};
.fi
.SH "DESCRIPTION"
.PP
This clock provides resolution to the 1 second level
.SS "second_clock public static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static time_type local_time();
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
static time_type universal_time();
.fi

Get the current day in universal date as a ymd_type\&. .RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
template<typename time_zone_type> 
  static time_type local_time(boost::shared_ptr< time_zone_type > tz_ptr);
.fi

.RE

.SS "second_clock private static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static time_type create_time(::std::tm * current);
.fi

.RE


