.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "MA" 3 "" "" ""
.SH "NAME"
BOOST_VARIANT_NO_FULL_RECURSIVE_VARIANT_SUPPORT \- Indicates make_recursive_variant operates in an implementation\-defined manner\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/variant/variant_fwd\&.hpp>

BOOST_VARIANT_NO_FULL_RECURSIVE_VARIANT_SUPPORT
.fi
.SH "DESCRIPTION"
.PP
Defined only if
make_recursive_variant
does not operate as documented on the target compiler, but rather in an implementation\-defined manner\&.
.PP
\fBImplementation Note\fR: If
BOOST_VARIANT_NO_FULL_RECURSIVE_VARIANT_SUPPORT
is defined for the target compiler, the current implementation uses the MPL lambda mechanism to approximate the desired behavior\&. (In most cases, however, such compilers do not have full lambda support either\&.)

