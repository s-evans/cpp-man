.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION ADD_VALUE" 3 "" "" ""
.SH "NAME"
boost::log::add_value \- The function creates a manipulator that attaches an attribute value to a log record\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/utility/manipulators/add_value\&.hpp>


template<typename T> 
  add_value_manip< T && > add_value(attribute_name const & name, T && value);
template<typename DescriptorT, template< typename > class ActorT> 
  add_value_manip< typename DescriptorT::value_type && > 
  add_value(expressions::attribute_keyword< DescriptorT, ActorT > const &, 
            typename DescriptorT::value_type && value);
template<typename DescriptorT, template< typename > class ActorT> 
  add_value_manip< typename DescriptorT::value_type & > 
  add_value(expressions::attribute_keyword< DescriptorT, ActorT > const &, 
            typename DescriptorT::value_type & value);
template<typename DescriptorT, template< typename > class ActorT> 
  add_value_manip< typename DescriptorT::value_type const & > 
  add_value(expressions::attribute_keyword< DescriptorT, ActorT > const &, 
            typename DescriptorT::value_type const & value);
.fi

