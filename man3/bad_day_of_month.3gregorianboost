.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT BAD_DAY_OF" 3 "" "" ""
.SH "NAME"
boost::gregorian::bad_day_of_month \- Exception type for gregorian day of month (1\&.\&.31)
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/gregorian/greg_day\&.hpp>


struct bad_day_of_month : public out_of_range {
  // construct/copy/destruct
  bad_day_of_month();
  bad_day_of_month(const std::string &);
};
.fi
.SH "DESCRIPTION"
.SS "bad_day_of_month public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
bad_day_of_month();
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
bad_day_of_month(const std::string & s);
.fi

Allow other classes to throw with unique string for bad day like Feb 29\&. .RE


