.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TE" 3 "" "" ""
.SH "NAME"
boost::log::expressions::wrapped_formatter_terminal
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/expressions/formatters/wrap_formatter\&.hpp>

template<typename FunT, typename CharT> 
class wrapped_formatter_terminal {
public:
  // types
  typedef void                                  _is_boost_log_terminal;  // Internal typedef for type categorization\&. 
  typedef CharT                                 char_type;               // Character type\&. 
  typedef std::basic_string< char_type >        string_type;             // String type\&. 
  typedef basic_formatting_ostream< char_type > stream_type;             // Formatting stream type\&. 
  typedef FunT                                  function_type;           // Wrapped function type\&. 
  typedef string_type                           result_type;             // Formatter result type\&. 

  // construct/copy/destruct
  explicit wrapped_formatter_terminal(function_type const &);
  wrapped_formatter_terminal(wrapped_formatter_terminal const &);

  // public member functions
  function_type const & get_function() const;
  template<typename ContextT> result_type operator()(ContextT const &);
  template<typename ContextT> result_type operator()(ContextT const &) const;
};
.fi
.SH "DESCRIPTION"
.PP
Formatter function wrapper terminal\&.
.SS "wrapped_formatter_terminal public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
explicit wrapped_formatter_terminal(function_type const & fun);
.fi

Initializing construction\&. .RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
wrapped_formatter_terminal(wrapped_formatter_terminal const & that);
.fi

Copy constructor\&. .RE

.SS "wrapped_formatter_terminal public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
function_type const & get_function() const;
.fi

Returns the wrapped function\&. .RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
template<typename ContextT> result_type operator()(ContextT const & ctx);
.fi

Invokation operator\&. .RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
template<typename ContextT> result_type operator()(ContextT const & ctx) const;
.fi

Invokation operator\&. .RE


