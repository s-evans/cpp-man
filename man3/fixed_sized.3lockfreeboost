.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE" 3 "" "" ""
.SH "NAME"
boost::lockfree::fixed_sized
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/lockfree/policies\&.hpp>

template<bool IsFixedSized> 
struct fixed_sized : public boost::parameter::template_keyword< tag::fixed_sized, boost::mpl::bool_< IsFixedSized > >
{
};
.fi
.SH "DESCRIPTION"
.PP
Configures a data structure as
\fBfixed\-sized\fR\&.
.PP
The internal nodes are stored inside an array and they are addressed by array indexing\&. This limits the possible size of the queue to the number of elements that can be addressed by the index type (usually 2**16\-2), but on platforms that lack double\-width compare\-and\-exchange instructions, this is the best way to achieve lock\-freedom\&. This implies that a data structure is bounded\&.

