.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPL" 3 "" "" ""
.SH "NAME"
boost::log::attributes::attribute_value_impl \- Basic attribute value implementation class\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/attributes/attribute_value_impl\&.hpp>

template<typename T> 
class attribute_value_impl : public attribute_value::impl {
public:
  // types
  typedef T value_type;  // Value type\&. 

  // construct/copy/destruct
  explicit attribute_value_impl(value_type const &);
  explicit attribute_value_impl(value_type &&);

  // public member functions
  virtual bool dispatch(type_dispatcher &);
  virtual typeindex::type_index get_type() const;
  value_type const & get() const;
};
.fi
.SH "DESCRIPTION"
.PP
This class can be used as a boilerplate for simple attribute values\&. The class implements all needed interfaces of attribute values and allows to store a single value of the type specified as a template parameter\&. The stored value can be dispatched with type dispatching mechanism\&.
.SS "attribute_value_impl public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
explicit attribute_value_impl(value_type const & v);
.fi

.sp
Constructor with initialization of the stored value
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
explicit attribute_value_impl(value_type && v);
.fi

.sp
Constructor with initialization of the stored value
.RE

.SS "attribute_value_impl public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
virtual bool dispatch(type_dispatcher & dispatcher);
.fi

.sp
Attribute value dispatching method\&.
.sp

.PP
Parameters:
.RS 4
.PP
dispatcher
.RS 4
The dispatcher that receives the stored value
.RE
.RE
.PP
Returns:
.RS 4
true
if the value has been dispatched,
false
otherwise
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
virtual typeindex::type_index get_type() const;
.fi

.sp

.PP
Returns:
.RS 4
The attribute value type
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
value_type const & get() const;
.fi

.sp

.PP
Returns:
.RS 4
Reference to the contained value\&.
.RE
.RE


