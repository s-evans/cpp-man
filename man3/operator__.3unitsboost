.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPL" 3 "" "" ""
.SH "NAME"
boost::units::operator<< \- Print a quantity\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/units/io\&.hpp>


template<typename Char, typename Traits, typename Unit, typename T> 
  std::basic_ostream< Char, Traits > & 
  operator<<(std::basic_ostream< Char, Traits > & os, 
             const quantity< Unit, T > & q);
.fi
.SH "DESCRIPTION"
.PP
Prints the value followed by the unit\&. If the engineering_prefix, or binary_prefix is set, tries to scale the value appropriately\&. For example, it might print 12\&.345 km instead of 12345 m\&. (Note does
\fBnot\fR
attempt to automatically scale scalars like double, float\&.\&.\&.)

