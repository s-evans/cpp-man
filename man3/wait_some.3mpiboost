.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION WAIT_SOME" 3 "" "" ""
.SH "NAME"
boost::mpi::wait_some \- Wait until some non\-blocking requests have completed\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/mpi/nonblocking\&.hpp>


template<typename BidirectionalIterator, typename OutputIterator> 
  std::pair< OutputIterator, BidirectionalIterator > 
  wait_some(BidirectionalIterator first, BidirectionalIterator last, 
            OutputIterator out);
template<typename BidirectionalIterator> 
  BidirectionalIterator 
  wait_some(BidirectionalIterator first, BidirectionalIterator last);
.fi
.SH "DESCRIPTION"
.PP
This routine takes in a set of requests stored in the iterator range
[first,last) and waits until at least one of the requests has completed\&. It then completes all of the requests it can, partitioning the input sequence into pending requests followed by completed requests\&. If an output iterator is provided,
status
objects will be emitted for each of the completed requests\&. This routine provides functionality equivalent to
MPI_Waitsome\&.
.PP

.PP
Parameters:
.RS 4
.PP
first
.RS 4
The iterator that denotes the beginning of the sequence of request objects\&.
.RE
.PP
last
.RS 4
The iterator that denotes the end of the sequence of request objects\&. This may not be equal to
first\&.
.RE
.PP
out
.RS 4
If provided, the
status
objects corresponding to completed requests will be emitted through this output iterator\&.
.RE
.RE
.PP
Returns:
.RS 4
If the
out
parameter was provided, a pair containing the output iterator
out
after all of the
status
objects have been written through it and an iterator referencing the first completed request\&. If no
out
parameter was provided, only the iterator referencing the first completed request will be emitted\&.
.RE

