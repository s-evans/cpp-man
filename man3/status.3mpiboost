.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS STATUS" 3 "" "" ""
.SH "NAME"
boost::mpi::status \- Contains information about a message that has been or can be received\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/mpi/status\&.hpp>


class status {
public:
  // construct/copy/destruct
  status();
  status(MPI_Status const &);

  // public member functions
  int source() const;
  int tag() const;
  int error() const;
  bool cancelled() const;
  template<typename T> optional< int > count() const;
  operator MPI_Status &();
  operator const MPI_Status &() const;

  // public data members
  mutable int m_count;
};
.fi
.SH "DESCRIPTION"
.PP
This structure contains status information about messages that have been received (with
communicator::recv) or can be received (returned from
communicator::probe
or
communicator::iprobe)\&. It permits access to the source of the message, message tag, error code (rarely used), or the number of elements that have been transmitted\&.
.SS "status public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
status();
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
status(MPI_Status const & s);
.fi

.RE

.SS "status public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
int source() const;
.fi

.sp
Retrieve the source of the message\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
int tag() const;
.fi

.sp
Retrieve the message tag\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
int error() const;
.fi

.sp
Retrieve the error code\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
bool cancelled() const;
.fi

.sp
Determine whether the communication associated with this object has been successfully cancelled\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}

.sp

.nf
template<typename T> optional< int > count() const;
.fi

.sp
Determines the number of elements of type
T
contained in the message\&. The type
T
must have an associated data type, i\&.e\&.,
is_mpi_datatype<T>
must derive
mpl::true_\&. In cases where the type
T
does not match the transmitted type, this routine will return an empty
optional<int>\&.
.sp

.PP
Returns:
.RS 4
the number of
T
elements in the message, if it can be determined\&.
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}

.sp

.nf
operator MPI_Status &();
.fi

.sp
References the underlying
MPI_Status
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 7.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  7." 4.2
.\}

.sp

.nf
operator const MPI_Status &() const;
.fi

.sp
References the underlying
MPI_Status
.RE


