.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS DUMMY_MUTEX" 3 "" "" ""
.SH "NAME"
boost::signals2::dummy_mutex \- Fake mutex which does nothing\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/signals2/dummy_mutex\&.hpp>


class dummy_mutex : public noncopyable {
public:
  void lock();
  bool try_lock();
  void unlock();
};
.fi
.SH "DESCRIPTION"
.PP
You may wish to use the
dummy_mutex
class for the
Mutex
template type of your signals if you are not concerned about thread safety\&. This may give slightly faster performance, since
dummy_mutex
performs no actual locking\&.
.PP

.sp

.nf
void lock();
.fi

.PP
No effect\&.
.PP

.sp

.nf
bool try_lock();
.fi

.PP
No effect\&.
.PP
Returns:
.RS 4
true\&.
.RE
.PP

.sp

.nf
void unlock();
.fi

.PP
No effect\&.

