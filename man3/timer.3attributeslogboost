.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TIMER" 3 "" "" ""
.SH "NAME"
boost::log::attributes::timer \- A class of an attribute that makes an attribute value of the time interval since construction\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/attributes/timer\&.hpp>


class timer : public attribute {
public:
  // types
  typedef utc_time_traits::time_type::time_duration_type value_type;  // Attribute value type\&. 

  // construct/copy/destruct
  timer();
  explicit timer(cast_source const &);
};
.fi
.SH "DESCRIPTION"
.PP
The timer attribute calculates the time passed since its construction and returns it on value acquisition\&. The attribute value type is
boost::posix_time::time_duration\&.
.PP
On Windows platform there are two implementations of the attribute\&. The default one is more precise but a bit slower\&. This version uses
QueryPerformanceFrequence/QueryPerformanceCounter
API to calculate elapsed time\&.
.PP
There are known problems with these functions when used with some CPUs, notably AMD Athlon with Cool\'n\'Quiet technology enabled\&. See the following links for more information and possible resolutions:
.PP
\m[blue]\fBhttp://support\&.microsoft\&.com/?scid=kb;en\-us;895980\fR\m[]
\m[blue]\fBhttp://support\&.microsoft\&.com/?id=896256\fR\m[]
.PP
In case if none of these solutions apply, you are free to define
BOOST_LOG_NO_QUERY_PERFORMANCE_COUNTER
macro to fall back to another implementation based on Boost\&.DateTime\&.
.SS "timer public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
timer();
.fi

.sp
Constructor\&. Starts time counting\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
explicit timer(cast_source const & source);
.fi

.sp
Constructor for casting support
.RE


