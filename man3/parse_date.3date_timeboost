.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPL" 3 "" "" ""
.SH "NAME"
boost::date_time::parse_date \- Generic function to parse a delimited date (eg: 2002\-02\-10)
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/date_parsing\&.hpp>


template<typename date_type> 
  date_type parse_date(const std::string & s, int order_spec = ymd_order_iso);
.fi
.SH "DESCRIPTION"
.PP
Accepted formats are: "2003\-02\-10" or " 2003\-Feb\-10" or "2003\-Feburary\-10" The order in which the Month, Day, & Year appear in the argument string can be accomodated by passing in the appropriate ymd_order_spec

