.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLAT" 3 "" "" ""
.SH "NAME"
boost::date_time::c_local_adjustor \- Adjust to / from utc using the C API\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/c_local_time_adjustor\&.hpp>

template<typename time_type> 
class c_local_adjustor {
public:
  // types
  typedef time_type::time_duration_type time_duration_type;
  typedef time_type::date_type          date_type;         
  typedef date_type::duration_type      date_duration_type;

  // public static functions
  static time_type utc_to_local(const time_type &);
};
.fi
.SH "DESCRIPTION"
.PP
Warning!!! This class assumes that timezone settings of the machine are correct\&. This can be a very dangerous assumption\&.
.SS "c_local_adjustor public static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static time_type utc_to_local(const time_type & t);
.fi

Convert a utc time to local time\&. .RE


