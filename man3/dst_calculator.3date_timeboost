.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLATE" 3 "" "" ""
.SH "NAME"
boost::date_time::dst_calculator \- Dynamic class used to caluclate dst transition information\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/dst_rules\&.hpp>

template<typename date_type_, typename time_duration_type_> 
class dst_calculator {
public:
  // types
  typedef time_duration_type_ time_duration_type;
  typedef date_type_          date_type;         

  // public static functions
  static time_is_dst_result 
  process_local_dst_start_day(const time_duration_type &, unsigned int, long);
  static time_is_dst_result 
  process_local_dst_end_day(const time_duration_type &, unsigned int, long);
  static time_is_dst_result 
  local_is_dst(const date_type &, const time_duration_type &, 
               const date_type &, const time_duration_type &, 
               const date_type &, const time_duration_type &, 
               const time_duration_type &);
  static time_is_dst_result 
  local_is_dst(const date_type &, const time_duration_type &, 
               const date_type &, unsigned int, const date_type &, 
               unsigned int, long);
};
.fi
.SH "DESCRIPTION"
.SS "dst_calculator public static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static time_is_dst_result 
process_local_dst_start_day(const time_duration_type & time_of_day, 
                            unsigned int dst_start_offset_minutes, 
                            long dst_length_minutes);
.fi

.sp
Check the local time offset when on dst start day\&. On this dst transition, the time label between the transition boundary and the boudary + the offset are invalid times\&. If before the boundary then still not in dst\&.
.PP
Parameters:
.RS 4
.PP
dst_length_minutes
.RS 4
Number of minutes to adjust clock forward
.RE
.PP
dst_start_offset_minutes
.RS 4
Local day offset for start of dst
.RE
.PP
time_of_day
.RS 4
Time offset in the day for the local time
.RE
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
static time_is_dst_result 
process_local_dst_end_day(const time_duration_type & time_of_day, 
                          unsigned int dst_end_offset_minutes, 
                          long dst_length_minutes);
.fi

.sp
Check the local time offset when on the last day of dst\&. This is the calculation for the DST end day\&. On that day times prior to the conversion time \- dst_length (1 am in US) are still in dst\&. Times between the above and the switch time are ambiguous\&. Times after the start_offset are not in dst\&.
.PP
Parameters:
.RS 4
.PP
dst_end_offset_minutes
.RS 4
Local time of day for end of dst
.RE
.PP
time_of_day
.RS 4
Time offset in the day for the local time
.RE
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
static time_is_dst_result 
local_is_dst(const date_type & current_day, 
             const time_duration_type & time_of_day, 
             const date_type & dst_start_day, 
             const time_duration_type & dst_start_offset, 
             const date_type & dst_end_day, 
             const time_duration_type & dst_end_offset, 
             const time_duration_type & dst_length_minutes);
.fi

.sp
Calculates if the given local time is dst or not\&. Determines if the time is really in DST or not\&. Also checks for invalid and ambiguous\&.
.PP
Parameters:
.RS 4
.PP
current_day
.RS 4
The day to check for dst
.RE
.PP
dst_end_day
.RS 4
Ending day of dst for the given locality
.RE
.PP
dst_end_offset
.RS 4
Time offset within day given in dst for dst boundary
.RE
.PP
dst_start_day
.RS 4
Starting day of dst for the given locality
.RE
.PP
dst_start_offset
.RS 4
Time offset within day for dst boundary
.RE
.PP
time_of_day
.RS 4
Time offset within the day to check
.RE
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
static time_is_dst_result 
local_is_dst(const date_type & current_day, 
             const time_duration_type & time_of_day, 
             const date_type & dst_start_day, 
             unsigned int dst_start_offset_minutes, 
             const date_type & dst_end_day, 
             unsigned int dst_end_offset_minutes, long dst_length_minutes);
.fi

.sp
Calculates if the given local time is dst or not\&. Determines if the time is really in DST or not\&. Also checks for invalid and ambiguous\&.
.PP
Parameters:
.RS 4
.PP
current_day
.RS 4
The day to check for dst
.RE
.PP
dst_end_day
.RS 4
Ending day of dst for the given locality
.RE
.PP
dst_end_offset_minutes
.RS 4
Offset within day given in dst for dst boundary (eg 120 for US which is 02:00:00)
.RE
.PP
dst_length_minutes
.RS 4
Length of dst adjusment (eg: 60 for US)
.RE
.PP
dst_start_day
.RS 4
Starting day of dst for the given locality
.RE
.PP
dst_start_offset_minutes
.RS 4
Offset within day for dst boundary (eg 120 for US which is 02:00:00)
.RE
.PP
time_of_day
.RS 4
Time offset within the day to check
.RE
.RE
.RE


