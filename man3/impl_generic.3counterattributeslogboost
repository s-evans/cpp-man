.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS IMPL_GENERIC" 3 "" "" ""
.SH "NAME"
boost::log::attributes::counter::impl_generic
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/attributes/counter\&.hpp>



class impl_generic : public counter< T >::impl {
public:
  // construct/copy/destruct
  impl_generic(value_type, long);

  // public member functions
  attribute_value get_value();
};
.fi
.SH "DESCRIPTION"
.SS "impl_generic public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
impl_generic(value_type initial, long step);
.fi

.sp
Initializing constructor
.RE

.SS "impl_generic public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
attribute_value get_value();
.fi

.RE


