.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION T" 3 "" "" ""
.SH "NAME"
boost::log::extract_or_default
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/attributes/value_extraction\&.hpp>


template<typename DescriptorT, template< typename > class ActorT, 
         typename DefaultT> 
  result_of::extract_or_default< typename DescriptorT::value_type, DefaultT, DescriptorT >::type 
  extract_or_default(expressions::attribute_keyword< DescriptorT, ActorT > const & keyword, 
                     record_view const & rec, DefaultT const & def_val);
.fi
.SH "DESCRIPTION"
.PP
The function extracts an attribute value from the view\&. The user has to explicitly specify the type or set of possible types of the attribute value to be visited\&.
.PP
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
Caution must be exercised if the default value is a temporary object\&. Because the function returns a reference, if the temporary object is destroyed, the reference may become dangling\&.
.sp .5v
.RE

.PP
Parameters:
.RS 4
.PP
def_val
.RS 4
The default value
.RE
.PP
keyword
.RS 4
The keyword of the attribute value to extract\&.
.RE
.PP
rec
.RS 4
A log record view\&. The attribute value will be sought among those associated with the record\&.
.RE
.RE
.PP
Returns:
.RS 4
The extracted value, if found\&. The default value otherwise\&.
.RE

