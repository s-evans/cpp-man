.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEM" 3 "" "" ""
.SH "NAME"
boost::algorithm::is_permutation \- Tests to see if the sequence [first,last) is a permutation of the sequence starting at first2\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/cxx14/is_permutation\&.hpp>


template<typename ForwardIterator1, typename ForwardIterator2, 
         typename BinaryPredicate> 
  bool is_permutation(ForwardIterator1 first1, ForwardIterator1 last1, 
                      ForwardIterator2 first2, ForwardIterator2 last2, 
                      BinaryPredicate pred);
.fi
.SH "DESCRIPTION"
.PP

.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
This function is part of the C++2014 standard library\&. We will use the standard one if it is available, otherwise we have our own implementation\&.
.sp .5v
.RE

.PP
Parameters:
.RS 4
.PP
first1
.RS 4
The start of the input sequence
.RE
.PP
first2
.RS 4
The start of the second sequence
.RE
.PP
last1
.RS 4
One past the end of the input sequence
.RE
.PP
last2
.RS 4
One past the end of the second sequence
.RE
.PP
pred
.RS 4
The predicate to compare elements with
.RE
.RE

