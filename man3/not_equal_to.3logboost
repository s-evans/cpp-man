.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT NOT_EQUAL_TO" 3 "" "" ""
.SH "NAME"
boost::log::not_equal_to \- Inequality predicate\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/utility/functional/logical\&.hpp>


struct not_equal_to {
  // types
  typedef bool result_type;

  // public member functions
  template<typename T, typename U> bool operator()(T const &, U const &) const;

  // private static functions
  template<typename T, typename U> 
    static bool op(T const &, U const &, mpl::false_ const &);
  template<typename T, typename U> 
    static bool op(T const &, U const &, mpl::true_ const &);
};
.fi
.SH "DESCRIPTION"
.SS "not_equal_to public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename T, typename U> 
  bool operator()(T const & left, U const & right) const;
.fi

.RE

.SS "not_equal_to private static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename T, typename U> 
  static bool op(T const & left, U const & right, mpl::false_ const &);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
template<typename T, typename U> 
  static bool op(T const & left, U const & right, mpl::true_ const &);
.fi

.RE


