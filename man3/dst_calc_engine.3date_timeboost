.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLAT" 3 "" "" ""
.SH "NAME"
boost::date_time::dst_calc_engine \- Compile\-time configurable daylight savings time calculation engine\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/dst_rules\&.hpp>

template<typename date_type, typename time_duration_type, typename dst_traits> 
class dst_calc_engine {
public:
  // types
  typedef date_type::year_type                            year_type;    
  typedef date_type::calendar_type                        calendar_type;
  typedef dst_calculator< date_type, time_duration_type > dstcalc;      

  // public static functions
  static time_is_dst_result 
  local_is_dst(const date_type &, const time_duration_type &);
  static bool is_dst_boundary_day(date_type);
  static time_duration_type dst_offset();
  static date_type local_dst_start_day(year_type);
  static date_type local_dst_end_day(year_type);
};
.fi
.SH "DESCRIPTION"
.SS "dst_calc_engine public static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static time_is_dst_result 
local_is_dst(const date_type & d, const time_duration_type & td);
.fi

.sp
Calculates if the given local time is dst or not\&. Determines if the time is really in DST or not\&. Also checks for invalid and ambiguous\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
static bool is_dst_boundary_day(date_type d);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
static time_duration_type dst_offset();
.fi

The time of day for the dst transition (eg: typically 01:00:00 or 02:00:00) .RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}

.sp

.nf
static date_type local_dst_start_day(year_type year);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}

.sp

.nf
static date_type local_dst_end_day(year_type year);
.fi

.RE


