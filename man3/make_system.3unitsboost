.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE" 3 "" "" ""
.SH "NAME"
boost::units::make_system
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/units/make_system\&.hpp>

template<typename BaseUnit0, typename BaseUnit1, typename BaseUnit2, \&.\&.\&. , 
         typename BaseUnitN> 
struct make_system {
  // types
  typedef \fIunspecified\fR type;
};
.fi
.SH "DESCRIPTION"
.PP
Metafunction returning a homogeneous system that can represent any combination of the base units\&. There must be no way to represent any of the base units in terms of the others\&. make_system<foot_base_unit, meter_base_unit>::type is not allowed, for example\&.

