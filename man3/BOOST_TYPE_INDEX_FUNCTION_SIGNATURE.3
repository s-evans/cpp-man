.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "MACRO BO" 3 "" "" ""
.SH "NAME"
BOOST_TYPE_INDEX_FUNCTION_SIGNATURE
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/type_index\&.hpp>

BOOST_TYPE_INDEX_FUNCTION_SIGNATURE
.fi
.SH "DESCRIPTION"
.PP
BOOST_TYPE_INDEX_FUNCTION_SIGNATURE is used by
boost::typeindex::ctti_type_index
class to deduce the name of a type\&. If your compiler is not recognized by the TypeIndex library and you wish to work with
boost::typeindex::ctti_type_index, you may define this macro by yourself\&.
.PP
BOOST_TYPE_INDEX_FUNCTION_SIGNATURE must be defined to a compiler specific macro that outputs the
\fBwhole\fR
function signature
\fBincluding\fR
\fBtemplate\fR
\fBparameters\fR\&.
.PP
If your compiler is not recognised and BOOST_TYPE_INDEX_FUNCTION_SIGNATURE is not defined, then a compile\-time error will arise at any attempt to use
boost::typeindex::ctti_type_index
classes\&.
.PP
See BOOST_TYPE_INDEX_REGISTER_CTTI_PARSING_PARAMS and BOOST_TYPE_INDEX_CTTI_USER_DEFINED_PARSING for an information of how to tune the implementation to make a nice pretty_name() output\&.

