.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS VISITATION_" 3 "" "" ""
.SH "NAME"
boost::log::visitation_result \- The class represents attribute value visitation result\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/attributes/value_visitation\&.hpp>


class visitation_result {
public:

  // Error codes for attribute value visitation\&. 
  enum error_code { ok, value_not_found, value_has_invalid_type };
  // construct/copy/destruct
  visitation_result(error_code = ok) noexcept;

  // public member functions
  explicit operator bool() const noexcept;
  bool operator!() const noexcept;
  error_code code() const noexcept;
};
.fi
.SH "DESCRIPTION"
.PP
The main purpose of this class is to provide a convenient interface for checking whether the attribute value visitation succeeded or not\&. It also allows to discover the actual cause of failure, should the operation fail\&.
.SS "visitation_result public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
visitation_result(error_code code = ok) noexcept;
.fi

.sp
Initializing constructor\&. Creates the result that is equivalent to the specified error code\&.
.RE

.SS "visitation_result public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
explicit operator bool() const noexcept;
.fi

.sp
Checks if the visitation was successful\&.
.sp

.PP
Returns:
.RS 4
true
if the value was visited successfully,
false
otherwise\&.
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
bool operator!() const noexcept;
.fi

.sp
Checks if the visitation was unsuccessful\&.
.sp

.PP
Returns:
.RS 4
false
if the value was visited successfully,
true
otherwise\&.
.RE
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
error_code code() const noexcept;
.fi

.sp

.PP
Returns:
.RS 4
The actual result code of value visitation
.RE
.RE


