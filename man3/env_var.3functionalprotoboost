.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE E" 3 "" "" ""
.SH "NAME"
boost::proto::functional::env_var \- A unary PolymorphicFunctionObject used for fetching the value associated with a particular key in a transform environment\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/transform/env\&.hpp>

template<typename Key> 
struct env_var :  proto::callable {
  // member classes/structs/unions
  template<typename Sig> 
  struct result {
    // types
    typedef \fIsee\fR\fI\-\fR\fIbelow\fR type;
  };

  // public member functions
  template<typename Env> \fIsee\fR\fI\-\fR\fIbelow\fR operator()(Env const &) const;
};
.fi
.SH "DESCRIPTION"
.SS "env_var public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename Env> \fIsee\fR\fI\-\fR\fIbelow\fR operator()(Env const & e) const;
.fi

.sp
This function behaves as follows:

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

                      If Key is proto::data_type:
                      
.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

                          If proto::is_env<Env>::value is true,
                          return e[proto::data]\&.
                        .RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

                          Otherwise, return e\&.
                        .RE
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

                      Otherwise, return e[Key()]\&.
                    .RE
.RS 4

.sp
See
proto::env::operator[]
for additional information\&.
.RE


