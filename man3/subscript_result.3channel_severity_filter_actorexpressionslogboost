.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS SUBSCRIPT_R" 3 "" "" ""
.SH "NAME"
boost::log::expressions::channel_severity_filter_actor::subscript_result \- An auxiliary pseudo\-reference to implement insertion through subscript operator\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/expressions/predicates/channel_severity_filter\&.hpp>



// An auxiliary pseudo\-reference to implement insertion through subscript
// operator\&.

class subscript_result {
public:
  // construct/copy/destruct
  subscript_result(channel_severity_filter_actor &, 
                   channel_value_type const &);
  void operator=(severity_value_type const &);
};
.fi
.SH "DESCRIPTION"
.SS "subscript_result public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
subscript_result(channel_severity_filter_actor & owner, 
                 channel_value_type const & channel);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
void operator=(severity_value_type const & severity);
.fi

.RE


