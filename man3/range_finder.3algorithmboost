.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION RANGE_FIN" 3 "" "" ""
.SH "NAME"
boost::algorithm::range_finder \- "Range" finder
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/string/finder\&.hpp>


template<typename ForwardIteratorT> 
  \fIunspecified\fR range_finder(ForwardIteratorT Begin, ForwardIteratorT End);
template<typename ForwardIteratorT> 
  \fIunspecified\fR range_finder(iterator_range< ForwardIteratorT > Range);
.fi
.SH "DESCRIPTION"
.PP
Construct the
range_finder\&. The finder does not perform any operation\&. It simply returns the given range for any input\&.
.PP

.PP
Parameters:
.RS 4
.PP
Begin
.RS 4
Beginning of the range
.RE
.PP
End
.RS 4
End of the range
.RE
.RE
.PP
Returns:
.RS 4
An instance of the
range_finger
object
.RE

