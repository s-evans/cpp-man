.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLATE N" 3 "" "" ""
.SH "NAME"
boost::interprocess::null_index
.SH "SYNOPSIS"
.\" null_index: Class template null_index
.\" Class template null_index: null_index
.\" null_index: Class template null_index
.\" Class template null_index: null_index
.\" iterator: Class template null_index
.\" Class template null_index: iterator
.\" end: Class template null_index
.\" Class template null_index: end
.\" const_iterator: Class template null_index
.\" Class template null_index: const_iterator
.\" begin: Class template null_index
.\" Class template null_index: begin

.sp
.nf
// In header: <boost/interprocess/indexes/null_index\&.hpp>

template<typename MapConfig> 
class null_index {
public:
  // types
  typedef int *       iterator;      
  typedef const int * const_iterator;

  // construct/copy/destruct
  null_index(segment_manager_base *);

  // public member functions
  const_iterator begin() const;
  iterator begin();
  const_iterator end() const;
  iterator end();
};
.fi
.SH "DESCRIPTION"
.PP
Null index type used to save compilation time when named indexes are not needed\&.
.SS "null_index public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
null_index(segment_manager_base *);
.fi

Empty constructor\&. .RE

.SS "null_index public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
.\" end: Class template null_index
.\" Class template null_index: end
.\" begin: Class template null_index
.\" Class template null_index: begin

.sp

.nf
const_iterator begin() const;
.fi

.sp
begin() is equal to end()
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
.\" end: Class template null_index
.\" Class template null_index: end
.\" begin: Class template null_index
.\" Class template null_index: begin

.sp

.nf
iterator begin();
.fi

.sp
begin() is equal to end()
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
.\" end: Class template null_index
.\" Class template null_index: end
.\" end: Class template null_index
.\" Class template null_index: end

.sp

.nf
const_iterator end() const;
.fi

.sp
begin() is equal to end()
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
.\" end: Class template null_index
.\" Class template null_index: end
.\" end: Class template null_index
.\" Class template null_index: end

.sp

.nf
iterator end();
.fi

.sp
begin() is equal to end()
.RE


