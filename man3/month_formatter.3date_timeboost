.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLAT" 3 "" "" ""
.SH "NAME"
boost::date_time::month_formatter \- Formats a month as as string into an ostream\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/date_formatting\&.hpp>

template<typename month_type, typename format_type, typename charT = char> 
class month_formatter {
public:

  // public static functions
  static ostream_type & format_month(const month_type &, ostream_type &);
  static std::ostream & format_month(const month_type &, std::ostream &);
};
.fi
.SH "DESCRIPTION"
.SS "month_formatter public static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static ostream_type & 
format_month(const month_type & month, ostream_type & os);
.fi

.sp
Formats a month as as string into an ostream\&. This function demands that month_type provide functions for converting to short and long strings if that capability is used\&.
.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
static std::ostream & 
format_month(const month_type & month, std::ostream & os);
.fi

.sp
Formats a month as as string into an ostream\&. This function demands that month_type provide functions for converting to short and long strings if that capability is used\&.
.RE


