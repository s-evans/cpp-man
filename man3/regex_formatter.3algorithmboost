.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEM" 3 "" "" ""
.SH "NAME"
boost::algorithm::regex_formatter \- Regex formatter\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/algorithm/string/regex_find_format\&.hpp>


template<typename CharT, typename TraitsT, typename AllocT> 
  \fIunspecified\fR regex_formatter(const std::basic_string< CharT, TraitsT, AllocT > & Format, 
                              match_flag_type Flags = format_default);
.fi
.SH "DESCRIPTION"
.PP
Construct the
regex_formatter\&. Regex formatter uses the regex engine to format a match found by the
regex_finder\&. This formatted it designed to closely cooperate with
regex_finder\&.
.PP

.PP
Parameters:
.RS 4
.PP
Flags
.RS 4
Format flags
.RE
.PP
Format
.RS 4
Regex format definition
.RE
.RE
.PP
Returns:
.RS 4
An instance of the
regex_formatter
functor
.RE

