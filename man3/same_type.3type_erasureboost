.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE " 3 "" "" ""
.SH "NAME"
boost::type_erasure::same_type
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/type_erasure/same_type\&.hpp>

template<typename T, typename U> 
struct same_type {
};
.fi
.SH "DESCRIPTION"
.PP
A built in concept that indicates that two types are the same\&. Either T or U or both can be placeholders\&.
.PP
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
.PP
Any number of instances of
deduced
can be connected with
same_type, but there should be at most one regular placeholder in the group\&. same_type<_a, _b> is not allowed\&. The reason for this is that the library needs to normalize all the placeholders, and in this context there is no way to decide whether to use
_a
or
_b\&.
.sp .5v
.RE


