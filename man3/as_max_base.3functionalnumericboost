.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE" 3 "" "" ""
.SH "NAME"
boost::numeric::functional::as_max_base
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/accumulators/numeric/functional\&.hpp>

template<typename Arg, typename EnableIf> 
struct as_max_base :
  public std::unary_function< Arg, remove_const< Arg >::type >
{

  // public member functions
   BOOST_STATIC_ASSERT(std::numeric_limits< typename remove_const< Arg >::type >::is_specialized);
  remove_const< Arg >::type operator()(Arg &) const;
};
.fi
.SH "DESCRIPTION"
.SS "as_max_base public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
 BOOST_STATIC_ASSERT(std::numeric_limits< typename remove_const< Arg >::type >::is_specialized);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
remove_const< Arg >::type operator()(Arg &) const;
.fi

.RE


