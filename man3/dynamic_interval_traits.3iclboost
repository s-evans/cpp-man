.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TE" 3 "" "" ""
.SH "NAME"
boost::icl::dynamic_interval_traits
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/icl/dynamic_interval_traits\&.hpp>

template<typename Type> 
struct dynamic_interval_traits {
  // types
  typedef Type::domain_type    domain_type;   
  typedef Type::domain_compare domain_compare;

  // public static functions
  static Type construct(const domain_type &, const domain_type &, 
                        interval_bounds);
  static Type construct_bounded(const bounded_value< domain_type > &, 
                                const bounded_value< domain_type > &);
};
.fi
.SH "DESCRIPTION"
.SS "dynamic_interval_traits public static functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
static Type construct(const domain_type & lo, const domain_type & up, 
                      interval_bounds bounds);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
static Type construct_bounded(const bounded_value< domain_type > & lo, 
                              const bounded_value< domain_type > & up);
.fi

.RE


