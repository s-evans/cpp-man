.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLATE UNIT" 3 "" "" ""
.SH "NAME"
boost::units::unit \- class representing a model\-dependent unit with no associated value
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/units/unit\&.hpp>

template<typename Dim, typename System, typename Enable> 
class unit {
public:
  // types
  typedef unit< Dim, System > unit_type;     
  typedef unit< Dim, System > this_type;     
  typedef Dim                 dimension_type;
  typedef System              system_type;   

  // construct/copy/destruct
  unit();
  unit(const this_type &);
  this_type & operator=(const this_type &);
};
.fi
.SH "DESCRIPTION"
.PP
(e\&.g\&. meters, Kelvin, feet, etc\&.\&.\&.)
.SS "unit public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
unit();
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
unit(const this_type &);
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}

.sp

.nf
this_type & operator=(const this_type &);
.fi

.RE


