.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLA" 3 "" "" ""
.SH "NAME"
boost::date_time::subsecond_duration \- Template for instantiating derived adjusting durations\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/time_duration\&.hpp>

template<typename base_duration, boost::int64_t frac_of_second> 
class subsecond_duration : public base_duration {
public:
  // types
  typedef base_duration::impl_type   impl_type;  
  typedef base_duration::traits_type traits_type;

  // construct/copy/destruct
  explicit subsecond_duration(boost::int64_t);

  // private member functions
   BOOST_STATIC_ASSERT_MSG((traits_type::ticks_per_second >=frac_of_second?traits_type::ticks_per_second%frac_of_second:frac_of_second%traits_type::ticks_per_second) = =0, 
                           \e"The base duration resolution must be a multiple of the subsecond duration resolution");
   BOOST_STATIC_CONSTANT(boost::int64_t, 
                         adjustment_ratio = (traits_type::ticks_per_second >=frac_of_second?traits_type::ticks_per_second/frac_of_second:frac_of_second/traits_type::ticks_per_second));
};
.fi
.SH "DESCRIPTION"
.SS "subsecond_duration public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
explicit subsecond_duration(boost::int64_t ss);
.fi

.RE

.SS "subsecond_duration private member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
 BOOST_STATIC_ASSERT_MSG((traits_type::ticks_per_second >=frac_of_second?traits_type::ticks_per_second%frac_of_second:frac_of_second%traits_type::ticks_per_second) = =0, 
                         \e"The base duration resolution must be a multiple of the subsecond duration resolution");
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
 BOOST_STATIC_CONSTANT(boost::int64_t, 
                       adjustment_ratio = (traits_type::ticks_per_second >=frac_of_second?traits_type::ticks_per_second/frac_of_second:frac_of_second/traits_type::ticks_per_second));
.fi

.RE


