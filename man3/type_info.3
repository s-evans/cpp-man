.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "TYPE DEFINITION " 3 "" "" ""
.SH "NAME"
type_info
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/type_index\&.hpp>


typedef type_index::type_info_t type_info;
.fi
.SH "DESCRIPTION"
.PP
Depending on a compiler flags, optimal implementation of type_info will be used as a default boost::typeindex::type_info\&.
.PP
Could be a std::type_info, boost::typeindex::detail::ctti_data or some user defined class\&.
.PP
type_info
\fBis\fR
\fBnot\fR
copyable or default constructible\&. It is
\fBnot\fR
assignable too!

