.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLAT" 3 "" "" ""
.SH "NAME"
boost::log::add_value_manip \- Attribute value manipulator\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/utility/manipulators/add_value\&.hpp>

template<typename RefT> 
class add_value_manip {
public:
  // types
  typedef RefT                                                                 reference_type;  // Stored reference type\&. 
  typedef remove_cv< typename remove_reference< reference_type >::type >::type value_type;      // Attribute value type\&. 

  // construct/copy/destruct
  add_value_manip(attribute_name const &, reference_type);

  // public member functions
  attribute_name get_name() const;
  get_value_result_type get_value() const;
};
.fi
.SH "DESCRIPTION"
.SS "add_value_manip public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
add_value_manip(attribute_name const & name, reference_type value);
.fi

Initializing constructor\&. .RE

.SS "add_value_manip public member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
attribute_name get_name() const;
.fi

Returns attribute name\&. .RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
get_value_result_type get_value() const;
.fi

Returns attribute value\&. .RE


