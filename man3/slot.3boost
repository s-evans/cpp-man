.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLATE SLOT" 3 "" "" ""
.SH "NAME"
boost::slot \- Pass slots as function arguments\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/signals/slot\&.hpp>

template<typename SlotFunction> 
class slot {
public:
  // construct/copy/destruct
  template<typename Slot> slot(Slot);
};
.fi
.SH "DESCRIPTION"
.SS "slot public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
template<typename Slot> slot(Slot target);
.fi

.PP
Effects:
.RS 4
Invokes
visit_each
(unqualified) to discover pointers and references to
signals::trackable
objects in
target\&.
.sp
Initializes
this
to contain the incoming slot
target, which may be any function object with which a
SlotFunction
can be constructed\&.
.RE
.RE


