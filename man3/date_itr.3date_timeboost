.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "CLASS TEMPLATE DA" 3 "" "" ""
.SH "NAME"
boost::date_time::date_itr \- Overrides the base date iterator providing hook for functors\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/date_time/date_iterator\&.hpp>

template<typename offset_functor, typename date_type> 
class date_itr : public boost::date_time::date_itr_base< date_type > {
public:
  // types
  typedef date_type::duration_type duration_type;

  // construct/copy/destruct
  date_itr(date_type, int = 1);

  // private member functions
  virtual duration_type get_offset(const date_type &) const;
  virtual duration_type get_neg_offset(const date_type &) const;
};
.fi
.SH "DESCRIPTION"
.SS "date_itr public construct/copy/destruct"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
date_itr(date_type d, int factor = 1);
.fi

.RE

.SS "date_itr private member functions"

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}

.sp

.nf
virtual duration_type get_offset(const date_type & current) const;
.fi

.RE


.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}

.sp

.nf
virtual duration_type get_neg_offset(const date_type & current) const;
.fi

.RE


