.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "FUNCTION TEMPLA" 3 "" "" ""
.SH "NAME"
boost::property_tree::xml_parser::write_xml
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/property_tree/xml_parser\&.hpp>


template<typename Ptree> 
  void write_xml(const std::string & filename, const Ptree & pt, 
                 const std::locale & loc = std::locale(), 
                 const xml_writer_settings< typename Ptree::key_type > & settings = xml_writer_settings< typename Ptree::key_type >());
.fi
.SH "DESCRIPTION"
.PP
Translates the property tree to XML and writes it the given file\&.
.PP
Parameters:
.RS 4
.PP
filename
.RS 4
The file to which to write the XML representation of the property tree\&.
.RE
.PP
loc
.RS 4
The locale to use when writing the output to file\&.
.RE
.PP
pt
.RS 4
The property tree to tranlsate to XML and output\&.
.RE
.PP
settings
.RS 4
The settings to use when writing out the property tree as XML\&.
.RE
.RE
.PP
Throws:
.RS 4
xml_parser_error In case of error translating the property tree to XML or writing to the output stream\&.
.RE

