.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "TYPE COMM_CREATE_K" 3 "" "" ""
.SH "NAME"
boost::mpi::comm_create_kind \- Enumeration used to describe how to adopt a C MPI_Comm into a Boost\&.MPI communicator\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/mpi/communicator\&.hpp>



enum comm_create_kind { comm_duplicate, comm_take_ownership, comm_attach };
.fi
.SH "DESCRIPTION"
.PP
The values for this enumeration determine how a Boost\&.MPI communicator will behave when constructed with an MPI communicator\&. The options are:
.PP

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
comm_duplicate:
Duplicate the MPI_Comm communicator to create a new communicator (e\&.g\&., with MPI_Comm_dup)\&. This new MPI_Comm communicator will be automatically freed when the Boost\&.MPI communicator (and all copies of it) is destroyed\&.
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
comm_take_ownership:
Take ownership of the communicator\&. It will be freed automatically when all of the Boost\&.MPI communicators go out of scope\&. This option must not be used with MPI_COMM_WORLD\&.
.RE

.sp
.RS 4
.ie n \{\
\h'-04'&#8226;\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
comm_attach:
The Boost\&.MPI communicator will reference the existing MPI communicator but will not free it when the Boost\&.MPI communicator goes out of scope\&. This option should only be used when the communicator is managed by the user or MPI library (e\&.g\&., MPI_COMM_WORLD)\&.
.RE
.sp
.RE


