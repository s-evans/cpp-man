.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLAT" 3 "" "" ""
.SH "NAME"
boost::proto::reverse_fold \- A PrimitiveTransform that is the same as the proto::fold<> transform, except that it folds back\-to\-front instead of front\-to\-back\&. It uses the proto::_reverse callable PolymorphicFunctionObject to create a fusion::reverse_view<> of the sequence before invoking fusion::fold<>\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/proto/transform/fold\&.hpp>

template<typename Sequence, typename State0, typename Fun> 
struct reverse_fold :  proto::fold< proto::_reverse(Sequence), State0, Fun > {
};
.fi

