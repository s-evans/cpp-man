.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "STRUCT TEMPLATE " 3 "" "" ""
.SH "NAME"
boost::log::sources::severity \- Severity level support feature\&.
.SH "SYNOPSIS"

.sp
.nf
// In header: <boost/log/sources/severity_feature\&.hpp>

template<typename LevelT = int> 
struct severity {
  // member classes/structs/unions
  template<typename BaseT> 
  struct apply {
    // types
    typedef basic_severity_logger< BaseT, LevelT > type;
  };
};
.fi
.SH "DESCRIPTION"
.PP
The logger with this feature registers a special attribute with an integral value type on construction\&. This attribute will provide severity level for each log record being made through the logger\&. The severity level can be omitted on logging record construction, in which case the default level will be used\&. The default level can also be customized by passing it to the logger constructor\&.
.PP
The type of the severity level attribute can be specified as a template parameter for the feature template\&. By default,
int
will be used\&.

